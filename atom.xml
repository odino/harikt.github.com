<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Random thoughts | Hari KT]]></title>
  <link href="http://harikt.com/atom.xml" rel="self"/>
  <link href="http://harikt.com/"/>
  <updated>2013-05-23T00:12:42+05:30</updated>
  <id>http://harikt.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Standalone Forms and Validation]]></title>
    <link href="http://harikt.com/blog/2013/05/21/standalone-forms-and-validation/"/>
    <updated>2013-05-21T20:15:00+05:30</updated>
    <id>http://harikt.com/blog/2013/05/21/standalone-forms-and-validation</id>
    <content type="html"><![CDATA[<p>Recently <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> was tagged Beta1. I would like to show you how you
can use <a href="http://auraphp.com/Aura.Input/">Aura.Input</a>, <a href="http://auraphp.com/Aura.Filter/">Aura.Filter</a> and <a href="http://auraphp.com/Aura.View/">Aura.View</a> to create form.</p>

<p>The <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> itself contains a basic filter implementation. As shown
in earlier post <a href="http://harikt.com/blog/2013/02/22/aura-turns-2/">Aura Turns 2</a></p>

<p>But in this post let us use the power of <a href="http://auraphp.com/Aura.Filter/">Aura.Filter</a>. As <a href="http://auraphp.com/Aura.Input/">Aura.Input</a>
doesn&#8217;t have a rendering capability you may need to use <a href="http://auraphp.com/Aura.View/">Aura.View</a> as
templating system ( see Using Aura.View ) or use the helper classes provided by <a href="http://auraphp.com/Aura.View/">Aura.View</a>
( see below Without using Aura.View completely )
or create your own helper classes to render the same from the hints
( see Hints for the view ).</p>

<p>The whole example is in <a href="https://github.com/harikt/form-example">https://github.com/harikt/form-example</a> repo.
If you don&#8217;t have composer, you can download it from <a href="http://getcomposer.org">http://getcomposer.org</a>
and install the dependencies via composer.</p>

<h2>In a nut shell</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone https://github.com/harikt/form-example
</span><span class='line'>cd form-example
</span><span class='line'>php composer.phar install
</span><span class='line'>php -S localhost:8000 web/index.php</span></code></pre></td></tr></table></div></figure>


<p>Point your browser to the url http://localhost:8000</p>

<h2>Let us look into some details</h2>

<p>Inorder to use <a href="http://auraphp.com/Aura.Filter/">Aura.Filter</a> with <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> we need to implement the
<code>Aura\Input\FilterInterface</code>.</p>

<p>This is just extending the <code>Aura\Filter\RuleCollection</code> and implementing
the <code>Aura\Input\FilterInterface</code> as below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">namespace</span> <span class="nx">Domicile\Example</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Filter\RuleCollection</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\FilterInterface</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Filter</span> <span class="k">extends</span> <span class="nx">RuleCollection</span> <span class="k">implements</span> <span class="nx">FilterInterface</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Let us create the form class.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">namespace</span> <span class="nx">Domicile\Example</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Form</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ContactForm</span> <span class="k">extends</span> <span class="nx">Form</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;id&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;name&#39;</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;size&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;maxlength&#39;</span> <span class="o">=&gt;</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span>
</span><span class='line'>                <span class="s1">&#39;cols&#39;</span> <span class="o">=&gt;</span> <span class="mi">40</span><span class="p">,</span>
</span><span class='line'>                <span class="s1">&#39;rows&#39;</span> <span class="o">=&gt;</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>            <span class="p">]);</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">,</span> <span class="s1">&#39;submit&#39;</span><span class="p">)</span>
</span><span class='line'>            <span class="o">-&gt;</span><span class="na">setAttribs</span><span class="p">([</span><span class="s1">&#39;value&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;send&#39;</span><span class="p">]);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getFilter</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;strlenMin&#39;</span><span class="p">,</span> <span class="mi">4</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;email&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;string&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">addSoftRule</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="nv">$filter</span><span class="o">::</span><span class="na">IS</span><span class="p">,</span> <span class="s1">&#39;strlenMin&#39;</span><span class="p">,</span> <span class="mi">6</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the filter object and pass it on instantiation of form.</p>

<p>Please note that the $rootpath in this example is just above the vendor
folder of the composer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$filter = new Domicile\Example\Filter(</span>
</span><span class='line'><span class="x">    new RuleLocator(array_merge(</span>
</span><span class='line'><span class="x">        require $rootpath . &#39;/vendor/aura/filter/scripts/registry.php&#39;,</span>
</span><span class='line'><span class="x">        [&#39;any&#39; =&gt; function () {</span>
</span><span class='line'><span class="x">            $rule = new \Aura\Filter\Rule\Any;</span>
</span><span class='line'><span class="x">            $rule-&gt;setRuleLocator(new RuleLocator(</span>
</span><span class='line'><span class="x">                require $rootpath . &#39;/vendor/aura/filter/scripts/registry.php&#39;</span>
</span><span class='line'><span class="x">            ));</span>
</span><span class='line'><span class="x">            return $rule;</span>
</span><span class='line'><span class="x">        }]</span>
</span><span class='line'><span class="x">    )),</span>
</span><span class='line'><span class="x">    new Translator(require $rootpath . &#39;/vendor/aura/filter/intl/en_US.php&#39;)</span>
</span><span class='line'><span class="x">);</span>
</span><span class='line'>
</span><span class='line'><span class="x">$form = new Domicile\Example\ContactForm(new Builder, $filter);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <a href="http://auraphp.com/Aura.Input/">Aura.Input</a> has two methods we can make use.</p>

<p>1 ) fill() method helps us to fill the data values</p>

<p>2 ) filter() method which helps to filter and validate data according to
the rules specified in the form.</p>

<p>The code will looks like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">if ($_POST &amp;&amp; $_POST[&#39;submit&#39;] == &#39;send&#39;) {</span>
</span><span class='line'><span class="x">    $data = $_POST;</span>
</span><span class='line'><span class="x">    $form-&gt;fill($data);</span>
</span><span class='line'><span class="x">    if ($form-&gt;filter()) {</span>
</span><span class='line'><span class="x">        //</span>
</span><span class='line'><span class="x">        echo &quot;Yes successfully validated and filtered&quot;;</span>
</span><span class='line'><span class="x">        var_dump($data);</span>
</span><span class='line'><span class="x">        exit;</span>
</span><span class='line'><span class="x">    }</span>
</span><span class='line'><span class="x">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>The form element gives you hints for the view. An example from the above</p>

<h2>Hints for the view</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">// get the hints for the name field</span>
</span><span class='line'><span class="x">$hints = $form-&gt;get(&#39;name&#39;);</span>
</span><span class='line'>
</span><span class='line'><span class="x">// the hints array looks like this:</span>
</span><span class='line'><span class="x">$hints = array (</span>
</span><span class='line'><span class="x">  &#39;type&#39; =&gt; &#39;text&#39;,</span>
</span><span class='line'><span class="x">  &#39;name&#39; =&gt; &#39;name&#39;,</span>
</span><span class='line'><span class="x">  &#39;attribs&#39; =&gt; </span>
</span><span class='line'><span class="x">  array (</span>
</span><span class='line'><span class="x">    &#39;id&#39; =&gt; &#39;name&#39;,</span>
</span><span class='line'><span class="x">    &#39;type&#39; =&gt; NULL,</span>
</span><span class='line'><span class="x">    &#39;name&#39; =&gt; NULL,</span>
</span><span class='line'><span class="x">    &#39;size&#39; =&gt; 20,</span>
</span><span class='line'><span class="x">    &#39;maxlength&#39; =&gt; 20,</span>
</span><span class='line'><span class="x">  ),</span>
</span><span class='line'><span class="x">  &#39;options&#39; =&gt; </span>
</span><span class='line'><span class="x">  array (</span>
</span><span class='line'><span class="x">  ),</span>
</span><span class='line'><span class="x">  &#39;value&#39; =&gt; NULL,</span>
</span><span class='line'><span class="x">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Without using Aura.View completely</h2>

<p>If you are not planning to use Aura.View entirely as templating, you can
make use of <a href="http://auraphp.com/Aura.View/">Aura.View</a> helpers which can render to make the form.</p>

<p>For that you need to instantiate <code>Aura\View\HelperLocator</code> and get the
field object as below.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$helper = new Aura\View\HelperLocator([</span>
</span><span class='line'><span class="x">    &#39;field&#39;         =&gt; function () { </span>
</span><span class='line'><span class="x">        return new Aura\View\Helper\Form\Field(</span>
</span><span class='line'><span class="x">            require dirname(__DIR__) . &#39;/vendor/aura/view/scripts/field_registry.php&#39;</span>
</span><span class='line'><span class="x">        ); </span>
</span><span class='line'><span class="x">    },</span>
</span><span class='line'><span class="x">    &#39;input&#39;         =&gt; function () { return new Aura\View\Helper\Form\Input(</span>
</span><span class='line'><span class="x">            require dirname(__DIR__) . &#39;/vendor/aura/view/scripts/input_registry.php&#39;</span>
</span><span class='line'><span class="x">        ); </span>
</span><span class='line'><span class="x">    },</span>
</span><span class='line'><span class="x">    &#39;radios&#39;        =&gt; function () { return new Aura\View\Helper\Form\Radios(new Aura\View\Helper\Form\Input\Checked); },</span>
</span><span class='line'><span class="x">    &#39;repeat&#39;         =&gt; function () { return new Aura\View\Helper\Form\Repeat(</span>
</span><span class='line'><span class="x">            require dirname(__DIR__) . &#39;/vendor/aura/view/scripts/repeat_registry.php&#39;</span>
</span><span class='line'><span class="x">        ); </span>
</span><span class='line'><span class="x">    },</span>
</span><span class='line'><span class="x">    &#39;select&#39;        =&gt; function () { return new Aura\View\Helper\Form\Select; },</span>
</span><span class='line'><span class="x">    &#39;textarea&#39;      =&gt; function () { return new Aura\View\Helper\Form\Textarea; },</span>
</span><span class='line'><span class="x">]);</span>
</span><span class='line'>
</span><span class='line'><span class="x">$field = $helper-&gt;get(&#39;field&#39;);</span>
</span><span class='line'><span class="x">echo $field($form-&gt;get(&#39;name&#39;));</span>
</span><span class='line'><span class="x">echo $field($form-&gt;get(&#39;message&#39;));</span>
</span><span class='line'>
</span><span class='line'><span class="x">// echo $field($form-&gt;get(&#39;form-element&#39;));</span>
</span></code></pre></td></tr></table></div></figure>


<p>The above will output something like</p>

<p><code>&lt;input id="name" type="text" name="name" size="20" maxlength="20" /&gt;</code></p>

<h2>Using Aura.View</h2>

<p>But you can use <a href="http://auraphp.com/Aura.View/">Aura.View</a> to render it nicely. An example is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'>    <span class="k">echo</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">field</span><span class="p">(</span><span class="nv">$this</span><span class="o">-&gt;</span><span class="na">form</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">));</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>You can still look more closely on the <a href="https://github.com/harikt/form-example/blob/master/templates/default.php">templates</a> to see how it is used
in the example.</p>

<p>If you have any problems or confusions, let me know by comments.
I will try to address the same.</p>

<p>I would like to express huge Thanks to Paul M Jones for spending his
valuable time on the project, giving valuable feedback on the implementations.</p>

<p>Happy PhPing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Seriously? Tab Vs Spaces]]></title>
    <link href="http://harikt.com/blog/2013/02/27/seriously-tab-vs-spaces/"/>
    <updated>2013-02-27T07:38:00+05:30</updated>
    <id>http://harikt.com/blog/2013/02/27/seriously-tab-vs-spaces</id>
    <content type="html"><![CDATA[<p>I have created a repo <a href="https://github.com/harikt/seriosuly">seriously</a>, and have <a href="https://github.com/harikt/seriosuly/commits/master">3 commits</a> as of now .</p>

<p>It has a file <a href="https://github.com/harikt/seriosuly/blob/master/hell.php">hell.php</a>. I have created it by logging into <code>user X</code>
and with vim as the editor without any settings in .vimrc.</p>

<p><img class="center" src="http://harikt.com/assets/images/vim-tab.png" title="vim with no settings, and used tab" alt="vim with no settings, and used tab"></p>

<p>Then from user <code>harikt</code> I have edited with vim which has some .vimrc
setting like 1 tab = 4 spaces. Look into the <a href="https://github.com/harikt/seriosuly/blob/master/hell.php">code</a> and see how beautiful
it is.</p>

<p>Opening with geany it looks</p>

<p><img class="center" src="http://harikt.com/assets/images/geany.png" title="Oh from geany with settings 1 tab = 4 spaces" alt="Oh from geany with settings 1 tab = 4 spaces"></p>

<p>Let us don&#8217;t create problems, but solutions!</p>

<p>It is just one line you need to mention</p>

<p>&#8220;According to your editor settings set 1 tab = 4 spaces.&#8221; . no?</p>

<p>Or you don&#8217;t need to convert the tab at all?</p>

<p>Is your tabs 4 spaces, 8 spaces, 2 spaces?</p>

<p>Please fork and commit with your favourite editor mentioning the settings,
editor in your commit.</p>

<p>As as user I prefer consistency . And as I work with Aura, Symfony2,
ZF1, ZF2 I love to follow spaces, than individual projects choosing their
own styles which is a main benefit probably mostly to its users like me
than the core developers of individual system who don&#8217;t care about
other projects or its users?</p>

<p>After all when your project says we use tabs, do you care people who love
to use spaces there? Do you merge when something like this comes?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura turns 2]]></title>
    <link href="http://harikt.com/blog/2013/02/22/aura-turns-2/"/>
    <updated>2013-02-22T23:07:00+05:30</updated>
    <id>http://harikt.com/blog/2013/02/22/aura-turns-2</id>
    <content type="html"><![CDATA[<p>Looking over <a href="https://github.com/auraphp/Aura.Router/commit/8de403dc49bf803a1fd641f55726079853716ab7">the commits on Aura.Router</a>, <a href="https://github.com/auraphp/Aura.Signal">Aura.Signal</a> etc you will
notice, <a href="https://github.com/auraphp">aura project</a> has turned 2.</p>

<p>And today, I would like to introduce you, the new born baby still under active
development and refactoring based on user feedback, the
<a href="https://github.com/auraphp/Aura.Input">form library for php, Aura.Input</a>.</p>

<p>The <a href="https://github.com/auraphp/Aura.Input">Aura.Input</a>, doesn&#8217;t have a rendering functionality. But you can always
use Aura.View or create your own helpers.</p>

<p>A basic filtering based on closure exists in <a href="https://github.com/auraphp/Aura.Input">Aura.Input</a>. But you are
not limited, you can use your own filtering components or
integrate <a href="https://github.com/auraphp/Aura.Filter">Aura.Filter</a>.</p>

<p>Let us look at some code.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="c1">// use composer or require &#39;/path/to/Aura.Input/src.php&#39;;</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Form</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Builder</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Aura\Input\Filter</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$filter</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Aura\Input\Filter</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// validate</span>
</span><span class='line'><span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span> <span class="s1">&#39;Name should be alpha only&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">ctype_alpha</span><span class="p">(</span><span class="nv">$value</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">,</span> <span class="s1">&#39;Enter a valid email address&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">filter_var</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nx">FILTER_VALIDATE_EMAIL</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">,</span> <span class="s1">&#39;Enter a valid url&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">filter_var</span><span class="p">(</span><span class="nv">$value</span><span class="p">,</span> <span class="nx">FILTER_VALIDATE_URL</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$filter</span><span class="o">-&gt;</span><span class="na">setRule</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;Message should be more than 7 characters&#39;</span><span class="p">,</span> <span class="k">function</span> <span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="nb">strlen</span><span class="p">(</span><span class="nv">$value</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">7</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="k">true</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ContactForm</span> <span class="k">extends</span> <span class="nx">Form</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">init</span><span class="p">()</span>
</span><span class='line'>    <span class="p">{</span>
</span><span class='line'>        <span class="nv">$name</span>    <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$email</span>   <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;email&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$url</span>     <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;url&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$message</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">setField</span><span class="p">(</span><span class="s1">&#39;message&#39;</span><span class="p">,</span> <span class="s1">&#39;textarea&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$form</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ContactForm</span><span class="p">(</span><span class="k">new</span> <span class="nx">Builder</span><span class="p">,</span> <span class="nv">$filter</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$values</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Hari K T&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;email&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;oh will it works!&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;url&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;google.com&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s1">&#39;message&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;Aweso&#39;</span>
</span><span class='line'><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$form</span><span class="o">-&gt;</span><span class="na">setValues</span><span class="p">(</span><span class="nv">$values</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$passed</span> <span class="o">=</span> <span class="nv">$form</span><span class="o">-&gt;</span><span class="na">filter</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// &#39;foo&#39; is invalid</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="o">!</span> <span class="nv">$passed</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// get all messages</span>
</span><span class='line'>    <span class="nv">$actual</span> <span class="o">=</span> <span class="nv">$form</span><span class="o">-&gt;</span><span class="na">getMessages</span><span class="p">();</span>
</span><span class='line'>    <span class="nb">var_dump</span><span class="p">(</span><span class="nv">$actual</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Try it out, we have some more documentation for the <a href="https://github.com/auraphp/Aura.Input">Aura.Input</a>. I warn
the api is still not stable for <a href="https://github.com/auraphp/Aura.Input">Aura.Input</a> and is not yet released a Beta.</p>

<p>But it is a good start!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura.Http : Request and Response]]></title>
    <link href="http://harikt.com/blog/2013/02/16/aura-dot-http-request-and-response/"/>
    <updated>2013-02-16T14:44:00+05:30</updated>
    <id>http://harikt.com/blog/2013/02/16/aura-dot-http-request-and-response</id>
    <content type="html"><![CDATA[<p>The <code>Aura.Http</code> package provide you the tool to build and send request and response.</p>

<h1>Instantiation:</h1>

<p>The easiest way is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$http = require &#39;path/to/Aura.Http/scripts/instance.php&#39;;</span>
</span></code></pre></td></tr></table></div></figure>


<p>What it gives you is an object of <code>Aura\Http\Manager</code>. If you want to create
manually you can look into the <code>instance.php</code></p>

<h1>Building your Response</h1>

<p>Probably you may not have bothered too much on building the http response
either the framework does it for you, or until you need to send the correct
response.</p>

<p>To create a proper http response via <code>Aura.Http</code> we need to create a
response object.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response = $http-&gt;newResponse();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you have the response object. You can set the <code>header</code> via</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;headers-&gt;set(&#39;Header&#39;, &#39;Value&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you have an array of headers you can use <code>setAll</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;headers-&gt;setAll([</span>
</span><span class='line'><span class="x">    &#39;Header-One&#39; =&gt; &#39;header one value&#39;,</span>
</span><span class='line'><span class="x">    &#39;Header-Two&#39; =&gt; [</span>
</span><span class='line'><span class="x">        &#39;header two value A&#39;,</span>
</span><span class='line'><span class="x">        &#39;header two value B&#39;,</span>
</span><span class='line'><span class="x">        &#39;header two value C&#39;,</span>
</span><span class='line'><span class="x">    ],</span>
</span><span class='line'><span class="x">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>So a basic example of setting header value is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;headers-&gt;set(&#39;Content-Type&#39;, &#39;text/plain&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setting Content</h2>

<p>The header values are for the browser to understand what is coming from
server, and how it should render etc.</p>

<p>So we need to set the content. This can be achieved via <code>setContent</code> method.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;setContent(&#39;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Hello World!&lt;/body&gt;&lt;/html&gt;&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can always get the content via calling <code>getContent</code>.</p>

<h2>Setting and Getting Cookies</h2>

<p>Sometimes we may want to set the cookies. You can do it as</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;cookies-&gt;set(&#39;cookie_name&#39;, [</span>
</span><span class='line'><span class="x">    &#39;value&#39;    =&gt; &#39;cookie value&#39;, // cookie value</span>
</span><span class='line'><span class="x">    &#39;expire&#39;   =&gt; time() + 3600,  // expiration time in unix epoch seconds</span>
</span><span class='line'><span class="x">    &#39;path&#39;     =&gt; &#39;/path&#39;,        // server path for the cookie</span>
</span><span class='line'><span class="x">    &#39;domain&#39;   =&gt; &#39;example.com&#39;,  // domain for the cookie</span>
</span><span class='line'><span class="x">    &#39;secure&#39;   =&gt; false,          // send by ssl only?</span>
</span><span class='line'><span class="x">    &#39;httponly&#39; =&gt; true,           // send by http/https only?</span>
</span><span class='line'><span class="x">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The array keys mimic the <a href="http://php.net/setcookies">setcookie</a> parameters. If you have an array
you can use <code>setAll</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;cookies-&gt;setAll([</span>
</span><span class='line'><span class="x">    &#39;cookie_foo&#39; =&gt; [</span>
</span><span class='line'><span class="x">        &#39;value&#39; =&gt; &#39;value for cookie foo&#39;,</span>
</span><span class='line'><span class="x">    ],</span>
</span><span class='line'><span class="x">    &#39;cookie_bar&#39; =&gt; [</span>
</span><span class='line'><span class="x">        &#39;value&#39; =&gt; &#39;value for cookie bar&#39;,</span>
</span><span class='line'><span class="x">    ],</span>
</span><span class='line'><span class="x">]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can get a cookie by calling <code>get</code> method on cookies.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;cookies-&gt;get(&#39;cookie_name&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Setting and Getting Status</h2>

<p>By default the status code is 200. But at some point of time
like the one I explained earlier in <a href="http://harikt.com/blog/2012/12/16/status-code-304/">Status Code 304</a>, we don&#8217;t need to
send the whole content. But just the status code.</p>

<p>This is possible via <code>setStatusCode</code> and <code>setStatusText</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response-&gt;setStatusCode(304);</span>
</span><span class='line'><span class="x">$response-&gt;setStatusText(&#39;Same As It Ever Was&#39;);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Sending your response</h2>

<p>And finally we can send the response back. We can call the <code>send</code>
method and pass the <code>response</code> object.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$http-&gt;send($response);</span>
</span></code></pre></td></tr></table></div></figure>


<p>The full source code of example is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$http = require &#39;path/to/Aura.Http/scripts/instance.php&#39;;</span>
</span><span class='line'><span class="x">// send a response</span>
</span><span class='line'><span class="x">$response = $http-&gt;newResponse();</span>
</span><span class='line'><span class="x">$response-&gt;headers-&gt;set(&#39;Content-Type&#39;, &#39;text/plain&#39;);</span>
</span><span class='line'><span class="x">$response-&gt;setContent(&#39;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Hello World!&lt;/body&gt;&lt;/html&gt;&#39;);</span>
</span><span class='line'><span class="x">$http-&gt;send($response);</span>
</span></code></pre></td></tr></table></div></figure>


<p>From terminal start the server by <code>php -S localhost:8000 example.php</code> and
pointintg to <code>localhost:8000</code> in your browser.</p>

<p>In order to render just <code>Hello World!</code> in the browser the <code>Content-Type</code> we added should be
<code>text/html</code>.</p>

<p>We can always change the header status code, content-type etc
before we call <code>send()</code> method.</p>

<p>Let us modify the example at <a href="http://harikt.com/blog/2012/12/16/status-code-304/">Status Code 304</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$http = require &#39;path/to/Aura.Http/scripts/instance.php&#39;;</span>
</span><span class='line'><span class="x">$response = $http-&gt;newResponse();</span>
</span><span class='line'><span class="x">if ( isset($_SERVER[&#39;HTTP_IF_MODIFIED_SINCE&#39;]) &amp;&amp; </span>
</span><span class='line'><span class="x">    $_SERVER[&#39;HTTP_IF_MODIFIED_SINCE&#39;] == &#39;Tue, 15 Jan 2011 12:00 GMT&#39; ) {</span>
</span><span class='line'><span class="x">    $response-&gt;setStatusCode(304);</span>
</span><span class='line'><span class="x">} else {</span>
</span><span class='line'><span class="x">    $response-&gt;headers-&gt;set(&#39;Content-Type&#39;, &#39;text/html&#39;);</span>
</span><span class='line'><span class="x">    $response-&gt;headers-&gt;set(&#39;Last-Modified&#39;, &#39;Tue, 15 Jan 2011 12:00 GMT&#39;);</span>
</span><span class='line'><span class="x">    $response-&gt;setContent(&#39;&lt;html&gt;&lt;head&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Hello World!&lt;/body&gt;&lt;/html&gt;&#39;);</span>
</span><span class='line'><span class="x">}</span>
</span><span class='line'><span class="x">$http-&gt;send($response);</span>
</span></code></pre></td></tr></table></div></figure>


<p>You would have noticed I have used <code>$_SERVER</code> variable. In <code>Aura.Http</code>,
there is no methods to access the global server values. This is because
the <code>$_SERVER</code> values are not the exact http requested header. The server
modifies the request and we will be only getting the manipulated values
if we use <code>$_SERVER</code>, <code>$_GET</code>, <code>$_POST</code> values.</p>

<p><code>Aura.Http</code> only helps you to build, create, modify response and request.</p>

<h1>Creating Http Request</h1>

<p>We talked about response so far. What does Request actually mean?</p>

<p>Client -> Request something -> Server Responds</p>

<p>So that means we are trying to be a client or a browser, and making the necessary
headers and sending to server to get the corresponding response.</p>

<p>We can get all the repos of a user in github via curl.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">curl -i https://api.github.com/users/pmjones/repos</span>
</span></code></pre></td></tr></table></div></figure>


<p>The same can be achieved via <a href="https://github.com/auraphp/Aura.Http">Aura.Http</a>. The <a href="https://github.com/auraphp/Aura.Http">Aura.Http</a> provides a
means to do the same with PHP. It uses <code>curl</code> if it is available or <code>stream</code>
to make this happen.</p>

<p>You need to create a Request object.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$request = $http-&gt;newRequest();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Set the url via <code>setUrl</code> method and send.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$request-&gt;setUrl(&#39;https://api.github.com/users/pmjones/repos&#39;);</span>
</span><span class='line'><span class="x">$stack = $http-&gt;send($request);</span>
</span><span class='line'><span class="x">$repos = json_decode($stack[0]-&gt;content);</span>
</span><span class='line'><span class="x">foreach ($repos as $repo) {</span>
</span><span class='line'><span class="x">    echo $repo-&gt;name . PHP_EOL;</span>
</span><span class='line'><span class="x">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>There are more things to say. It can do basic authentication, post values etc.
Browse the documentation examples, source code, tests, and api.</p>

<p>Source Code : <a href="https://github.com/auraphp/Aura.Http">https://github.com/auraphp/Aura.Http</a></p>

<p>Documentation : <a href="http://auraphp.github.com/Aura.Http/version/1.0.0/">http://auraphp.github.com/Aura.Http/version/1.0.0/</a></p>

<p>API : <a href="http://auraphp.github.com/Aura.Http/version/1.0.0/api/">http://auraphp.github.com/Aura.Http/version/1.0.0/api/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Our awesome php people]]></title>
    <link href="http://harikt.com/blog/2013/01/09/our-awesome-php-people/"/>
    <updated>2013-01-09T20:00:00+05:30</updated>
    <id>http://harikt.com/blog/2013/01/09/our-awesome-php-people</id>
    <content type="html"><![CDATA[<p>Recently github introduces contributions chart. So I peeped into some of the people of our php community. It seems <a href="https://github.com/fabpot">@fabpot</a> is the one who contributes almost every day. Just 21 days without any contribution.</p>

<p><a href="https://github.com/fabpot"><img class="center" src="http://harikt.com/assets/images/github/fabpot.png" width="687" height="299" title="Contributions by fabpot" alt="Contributions by fabpot"></a>
<a href="https://github.com/weierophinney"><img class="center" src="http://harikt.com/assets/images/github/weierophinney.png" width="687" height="299" title="Contributions by weierophinney" alt="Contributions by weierophinney"></a>
<a href="https://github.com/pmjones"><img class="center" src="http://harikt.com/assets/images/github/pmjones.png" width="687" height="299" title="Contributions by pmjones" alt="Contributions by pmjones"></a>
<a href="https://github.com/willdurand"><img class="center" src="http://harikt.com/assets/images/github/willdurand.png" width="687" height="299" title="Contributions by willdurand" alt="Contributions by willdurand"></a>
<a href="https://github.com/Seldaek"><img class="center" src="http://harikt.com/assets/images/github/Seldaek.png" width="687" height="299" title="Contributions by Seldaek" alt="Contributions by Seldaek"></a>
<a href="https://github.com/markstory"><img class="center" src="http://harikt.com/assets/images/github/markstory.png" width="687" height="299" title="Contributions by markstory" alt="Contributions by markstory"></a>
<a href="https://github.com/taylorotwell"><img class="center" src="http://harikt.com/assets/images/github/taylorotwell.png" width="687" height="299" title="Contributions by taylorotwell" alt="Contributions by taylorotwell"></a>
<a href="https://github.com/WanWizard"><img class="center" src="http://harikt.com/assets/images/github/WanWizard.png" width="687" height="299" title="Contributions by WanWizard" alt="Contributions by WanWizard"></a>
<a href="https://github.com/drak"><img class="center" src="http://harikt.com/assets/images/github/drak.png" width="687" height="299" title="Contributions by drak" alt="Contributions by drak"></a>
<a href="https://github.com/nikic"><img class="center" src="http://harikt.com/assets/images/github/nikic.png" width="687" height="299" title="Contributions by nikic" alt="Contributions by nikic"></a>
<a href="https://github.com/avalanche123"><img class="center" src="http://harikt.com/assets/images/github/avalanche123.png" width="687" height="299" title="Contributions by avalanche123" alt="Contributions by avalanche123"></a>
<a href="https://github.com/shama"><img class="center" src="http://harikt.com/assets/images/github/shama.png" width="687" height="299" title="Contributions by shama" alt="Contributions by shama"></a>
<a href="https://github.com/vrana"><img class="center" src="http://harikt.com/assets/images/github/vrana.png" width="687" height="299" title="Contributions by vrana" alt="Contributions by vrana"></a>
<a href="https://github.com/philsturgeon"><img class="center" src="http://harikt.com/assets/images/github/philsturgeon.png" width="687" height="299" title="Contributions by philsturgeon" alt="Contributions by philsturgeon"></a>
<a href="https://github.com/DASPRiD"><img class="center" src="http://harikt.com/assets/images/github/DASPRiD.png" width="687" height="299" title="Contributions by DASPRiD" alt="Contributions by DASPRiD"></a>
<a href="https://github.com/mvriel"><img class="center" src="http://harikt.com/assets/images/github/mvriel.png" width="687" height="299" title="Contributions by mvriel" alt="Contributions by mvriel"></a>
<a href="https://github.com/c9s"><img class="center" src="http://harikt.com/assets/images/github/c9s.png" width="687" height="299" title="Contributions by c9s" alt="Contributions by c9s"></a>
<a href="https://github.com/weaverryan"><img class="center" src="http://harikt.com/assets/images/github/weaverryan.png" width="687" height="299" title="Contributions by weaverryan" alt="Contributions by weaverryan"></a>
<a href="https://github.com/bschussek"><img class="center" src="http://harikt.com/assets/images/github/bschussek.png" width="687" height="299" title="Contributions by bschussek" alt="Contributions by bschussek"></a>
<a href="https://github.com/vicb"><img class="center" src="http://harikt.com/assets/images/github/vicb.png" width="687" height="299" title="Contributions by vicb" alt="Contributions by nateabele"></a>
<a href="https://github.com/garak"><img class="center" src="http://harikt.com/assets/images/github/garak.png" width="687" height="299" title="Contributions by garak" alt="Contributions by garak"></a>
<a href="https://github.com/beberlei"><img class="center" src="http://harikt.com/assets/images/github/beberlei.png" width="687" height="299" title="Contributions by beberlei" alt="Contributions by beberlei"></a>
<a href="https://github.com/codeguy"><img class="center" src="http://harikt.com/assets/images/github/codeguy.png" width="687" height="299" title="Contributions by codeguy" alt="Contributions by codeguy"></a>
<a href="https://github.com/lsmith77"><img class="center" src="http://harikt.com/assets/images/github/lsmith77.png" width="687" height="299" title="Contributions by lsmith77" alt="Contributions by lsmith77"></a>
<a href="https://github.com/stof"><img class="center" src="http://harikt.com/assets/images/github/stof.png" width="687" height="299" title="Contributions by stof" alt="Contributions by stof"></a>
<a href="https://github.com/EavnDotPro"><img class="center" src="http://harikt.com/assets/images/github/EavnDotPro.png" width="687" height="299" title="Contributions by EavnDotPro" alt="Contributions by EavnDotPro"></a>
<a href="https://github.com/nateabele"><img class="center" src="http://harikt.com/assets/images/github/nateabele.png" width="687" height="299" title="Contributions by nateabele" alt="Contributions by nateabele"></a>
<a href="https://github.com/kriswallsmith"><img class="center" src="http://harikt.com/assets/images/github/kriswallsmith.png" width="687" height="299" title="Contributions by kriswallsmith" alt="Contributions by kriswallsmith"></a>
<a href="https://github.com/nrk"><img class="center" src="http://harikt.com/assets/images/github/nrk.png" width="687" height="299" title="Contributions by nrk" alt="Contributions by nrk"></a>
<a href="https://github.com/naderman"><img class="center" src="http://harikt.com/assets/images/github/naderman.png" width="687" height="299" title="Contributions by naderman" alt="Contributions by naderman"></a>
<a href="https://github.com/gwoo"><img class="center" src="http://harikt.com/assets/images/github/gwoo.png" width="687" height="299" title="Contributions by gwoo" alt="Contributions by gwoo"></a>
<a href="https://github.com/jwage"><img class="center" src="http://harikt.com/assets/images/github/jwage.png" width="687" height="299" title="Contributions by jwage" alt="Contributions by jwage"></a>
<a href="https://github.com/chartjes"><img class="center" src="http://harikt.com/assets/images/github/chartjes.png" width="687" height="299" title="Contributions by chartjes" alt="Contributions by chartjes"></a>
<a href="https://github.com/Tocacar"><img class="center" src="http://harikt.com/assets/images/github/Tocacar.png" width="687" height="299" title="Contributions by Tocacar" alt="Contributions by Tocacar"></a>
<a href="https://github.com/FrenkyNet"><img class="center" src="http://harikt.com/assets/images/github/FrenkyNet.png" width="687" height="299" title="Contributions by FrenkyNet" alt="Contributions by FrenkyNet"></a>
<a href="https://github.com/till"><img class="center" src="http://harikt.com/assets/images/github/till.png" width="687" height="299" title="Contributions by till" alt="Contributions by till"></a>
<a href="https://github.com/Ocramius"><img class="center" src="http://harikt.com/assets/images/github/Ocramius.png" width="687" height="299" title="Contributions by Ocramius" alt="Contributions by Ocramius"></a>
<a href="https://github.com/odino"><img class="center" src="http://harikt.com/assets/images/github/odino.png" width="687" height="299" title="Contributions by odino" alt="Contributions by odino"></a>
<a href="https://github.com/josegonzalez"><img class="center" src="http://harikt.com/assets/images/github/josegonzalez.png" width="687" height="299" title="Contributions by josegonzalez" alt="Contributions by josegonzalez"></a>
<a href="https://github.com/dereuromark"><img class="center" src="http://harikt.com/assets/images/github/dereuromark.png" width="687" height="299" title="Contributions by dereuromark" alt="Contributions by dereuromark"></a>
<a href="https://github.com/HosipLan"><img class="center" src="http://harikt.com/assets/images/github/HosipLan.png" width="687" height="299" title="Contributions by HosipLan" alt="Contributions by HosipLan"></a>
<a href="https://github.com/alganet"><img class="center" src="http://harikt.com/assets/images/github/alganet.png" width="687" height="299" title="Contributions by alganet" alt="Contributions by alganet"></a>
<a href="https://github.com/ezimuel"><img class="center" src="http://harikt.com/assets/images/github/ezimuel.png" width="687" height="299" title="Contributions by ezimuel" alt="Contributions by ezimuel"></a>
<a href="https://github.com/auroraeosrose"><img class="center" src="http://harikt.com/assets/images/github/auroraeosrose.png" width="687" height="299" title="Contributions by auroraeosrose" alt="Contributions by auroraeosrose"></a>
<a href="https://github.com/enygma"><img class="center" src="http://harikt.com/assets/images/github/enygma.png" width="687" height="299" title="Contributions by enygma" alt="Contributions by enygma"></a>
<a href="https://github.com/ralphschindler"><img class="center" src="http://harikt.com/assets/images/github/ralphschindler.png" width="687" height="299" title="Contributions by ralphschindler" alt="Contributions by ralphschindler"></a>
<a href="https://github.com/AD7six"><img class="center" src="http://harikt.com/assets/images/github/AD7six.png" width="687" height="299" title="Contributions by AD7six" alt="Contributions by AD7six"></a>
<a href="https://github.com/ADmad"><img class="center" src="http://harikt.com/assets/images/github/ADmad.png" width="687" height="299" title="Contributions by ADmad" alt="Contributions by ADmad"></a>
<a href="https://github.com/augustohp"><img class="center" src="http://harikt.com/assets/images/github/augustohp.png" width="687" height="299" title="Contributions by augustohp" alt="Contributions by augustohp"></a>
<a href="https://github.com/BlaineSch"><img class="center" src="http://harikt.com/assets/images/github/BlaineSch.png" width="687" height="299" title="Contributions by BlaineSch" alt="Contributions by BlaineSch"></a>
<a href="https://github.com/alexbilbie"><img class="center" src="http://harikt.com/assets/images/github/alexbilbie.png" width="687" height="299" title="Contributions by alexbilbie" alt="Contributions by alexbilbie"></a>
<a href="https://github.com/narfbg"><img class="center" src="http://harikt.com/assets/images/github/narfbg.png" width="687" height="299" title="Contributions by narfbg" alt="Contributions by narfbg"></a>
<a href="https://github.com/dg"><img class="center" src="http://harikt.com/assets/images/github/dg.png" width="687" height="299" title="Contributions by dg" alt="Contributions by dg"></a>
<a href="https://github.com/schmittjoh"><img class="center" src="http://harikt.com/assets/images/github/schmittjoh.png" width="687" height="299" title="Contributions by schmittjoh" alt="Contributions by schmittjoh"></a>
<a href="https://github.com/jschreuder"><img class="center" src="http://harikt.com/assets/images/github/jschreuder.png" width="687" height="299" title="Contributions by jschreuder" alt="Contributions by jschreuder"></a>
<a href="https://github.com/Geczy"><img class="center" src="http://harikt.com/assets/images/github/Geczy.png" width="687" height="299" title="Contributions by Geczy" alt="Contributions by Geczy"></a>
<a href="https://github.com/dzuelke"><img class="center" src="http://harikt.com/assets/images/github/dzuelke.png" width="687" height="299" title="Contributions by dzuelke" alt="Contributions by dzuelke"></a>
<a href="https://github.com/evert"><img class="center" src="http://harikt.com/assets/images/github/evert.png" width="687" height="299" title="Contributions by evert" alt="Contributions by evert"></a>
<a href="https://github.com/akrabat"><img class="center" src="http://harikt.com/assets/images/github/akrabat.png" width="687" height="299" title="Contributions by akrabat" alt="Contributions by akrabat"></a>
<a href="https://github.com/seejohnrun"><img class="center" src="http://harikt.com/assets/images/github/seejohnrun.png" width="687" height="299" title="Contributions by seejohnrun" alt="Contributions by seejohnrun"></a>
<a href="https://github.com/guilhermeblanco"><img class="center" src="http://harikt.com/assets/images/github/guilhermeblanco.png" width="687" height="299" title="Contributions by guilhermeblanco" alt="Contributions by guilhermeblanco"></a>
<a href="https://github.com/Maks3w"><img class="center" src="http://harikt.com/assets/images/github/Maks3w.png" width="687" height="299" title="Contributions by Maks3w" alt="Contributions by Maks3w"></a>
<a href="https://github.com/kore"><img class="center" src="http://harikt.com/assets/images/github/kore.png" width="687" height="299" title="Contributions by kore" alt="Contributions by kore"></a>
<a href="https://github.com/dragoonis"><img class="center" src="http://harikt.com/assets/images/github/dragoonis.png" width="687" height="299" title="Contributions by dragoonis" alt="Contributions by dragoonis"></a>
<a href="https://github.com/daschl"><img class="center" src="http://harikt.com/assets/images/github/daschl.png" width="687" height="299" title="Contributions by daschl" alt="Contributions by daschl"></a>
<a href="https://github.com/wilmoore"><img class="center" src="http://harikt.com/assets/images/github/wilmoore.png" width="687" height="299" title="Contributions by wilmoore" alt="Contributions by wilmoore"></a>
<a href="https://github.com/TheFrozenFire"><img class="center" src="http://harikt.com/assets/images/github/TheFrozenFire.png" width="687" height="299" title="Contributions by TheFrozenFire" alt="Contributions by TheFrozenFire"></a>
<a href="https://github.com/nickl-"><img class="center" src="http://harikt.com/assets/images/github/nickl-.png" width="687" height="299" title="Contributions by nickl-" alt="Contributions by nickl-"></a>
<a href="https://github.com/lorenzo"><img class="center" src="http://harikt.com/assets/images/github/lorenzo.png" width="687" height="299" title="Contributions by lorenzo" alt="Contributions by lorenzo"></a>
<a href="https://github.com/rchavik"><img class="center" src="http://harikt.com/assets/images/github/rchavik.png" width="687" height="299" title="Contributions by rchavik" alt="Contributions by rchavik"></a>
<a href="https://github.com/davidpersson"><img class="center" src="http://harikt.com/assets/images/github/davidpersson.png" width="687" height="299" title="Contributions by davidpersson" alt="Contributions by davidpersson"></a>
<a href="https://github.com/henriquemoody"><img class="center" src="http://harikt.com/assets/images/github/henriquemoody.png" width="687" height="299" title="Contributions by henriquemoody" alt="Contributions by henriquemoody"></a>
<a href="https://github.com/Freeaqingme"><img class="center" src="http://harikt.com/assets/images/github/Freeaqingme.png" width="687" height="299" title="Contributions by Freeaqingme" alt="Contributions by Freeaqingme"></a>
<a href="https://github.com/dbu"><img class="center" src="http://harikt.com/assets/images/github/dbu.png" width="687" height="299" title="Contributions by dbu" alt="Contributions by dbu"></a>
<a href="https://github.com/dshafik"><img class="center" src="http://harikt.com/assets/images/github/dshafik.png" width="687" height="299" title="Contributions by dshafik" alt="Contributions by dshafik"></a>
<a href="https://github.com/Vrtak-CZ"><img class="center" src="http://harikt.com/assets/images/github/Vrtak-CZ.png" width="687" height="299" title="Contributions by Vrtak-CZ" alt="Contributions by Vrtak-CZ"></a>
<a href="https://github.com/padraic"><img class="center" src="http://harikt.com/assets/images/github/padraic.png" width="687" height="299" title="Contributions by padraic" alt="Contributions by padraic"></a>
<a href="https://github.com/saltybeagle"><img class="center" src="http://harikt.com/assets/images/github/saltybeagle.png" width="687" height="299" title="Contributions by saltybeagle" alt="Contributions by saltybeagle"></a>
<a href="https://github.com/Hounddog"><img class="center" src="http://harikt.com/assets/images/github/Hounddog.png" width="687" height="299" title="Contributions by Hounddog" alt="Contributions by Hounddog"></a>
<a href="https://github.com/ceeram"><img class="center" src="http://harikt.com/assets/images/github/ceeram.png" width="687" height="299" title="Contributions by ceeram" alt="Contributions by ceeram"></a>
<a href="https://github.com/jmikola"><img class="center" src="http://harikt.com/assets/images/github/jmikola.png" width="687" height="299" title="Contributions by jmikola" alt="Contributions by jmikola"></a>
<a href="https://github.com/cweiske"><img class="center" src="http://harikt.com/assets/images/github/cweiske.png" width="687" height="299" title="Contributions by cweiske" alt="Contributions by cweiske"></a>
<a href="https://github.com/rdohms"><img class="center" src="http://harikt.com/assets/images/github/rdohms.png" width="687" height="299" title="Contributions by rdohms" alt="Contributions by rdohms"></a></p>

<p>and I too did some contributions in 2012 for <a href="https://github.com/auraphp">auraphp</a> and other projects.</p>

<p><a href="https://github.com/harikt"><img class="center" src="http://harikt.com/assets/images/github/harikt.png" width="687" height="299" title="Contributions by harikt" alt="Contributions by harikt"></a></p>

<p>The list is not complete, if you feel I missed your name or someone you feel needs to be added just give a tweet to me or fork the repo from github and send a PR.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thoughts on Package/Component Structure]]></title>
    <link href="http://harikt.com/blog/2013/01/04/thoughts-on-package-or-component/"/>
    <updated>2013-01-04T06:15:00+05:30</updated>
    <id>http://harikt.com/blog/2013/01/04/thoughts-on-package-or-component</id>
    <content type="html"><![CDATA[<p>Comparing a software X with Y will not make anything worst, but makes it better. But many of them will think it as a promotional stuff. It is not anyones&#8217;s problem. Some like to build it that way, some like the other way.</p>

<p>So I am not comparing X with Y here.</p>

<p>Not talking about package like Guzzle:</p>

<p>I am not mentioning building something like Guzzle, which is a framework that includes the tools needed to create a robust web service client.</p>

<p>But I am interested in talking about the packages which can be used to build something like Guzzle when you look into the require of composer.json.</p>

<p>That means something like Aura.Http which can be used to make a request to google and do the search if needed or post etc.</p>

<p>Structure of Package or Component:</p>

<p>1 ) We need to name a package.</p>

<p>Let us go for the <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-0.md">PSR-0</a> naming.</p>

<p>Each namespace must have a top-level namespace (&#8220;Vendor Name&#8221;), and a Package name. Probably you will end up with Vendor.Package or Vendor_Package .</p>

<p>2 ) <a href="http://getcomposer.org/">Composer</a>/<a href="https://github.com/crodas/Eath">Eath</a>, are great tools which help you to manage the dependency management in your PHP projects. So we need a composer.json or package.yml .</p>

<p>3 ) We are creating a package or component, so obviously it will contain source files and test files. It will be a mess when we keep all tests and source files in a same place. Most of them uses either <code>src</code> folder or <code>lib</code> or <code>library</code> to keep source files and <code>tests</code> to keep test files. Probably you have some documentation, a <code>docs</code> folder may help. May be some executable scripts. You can also add a <code>scripts</code> or <code>bin</code> folder.</p>

<p>Now your structure will be something like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Vendor.Package
</span><span class='line'>  ├── composer.json
</span><span class='line'>  ├── package.yml
</span><span class='line'>  ├── docs
</span><span class='line'>  ├── src
</span><span class='line'>  │   └── Vendor
</span><span class='line'>  │       └── Package
</span><span class='line'>  └── tests
</span><span class='line'>      └── Vendor
</span><span class='line'>          └── Package
</span></code></pre></td></tr></table></div></figure>


<p>The above structure follows a PSR-0 naming convention for package/component.</p>

<p>NIH : We all create new packages for we don&#8217;t like some other package invented here, not for its not invented here or probably to make use of newer stuffs like traits, closures etc available in PHP 5.4 than sticking with PHP 5 or sometimes it is not inveneted here.</p>

<p>So add your depenedencies to composer.json or package.yml</p>

<p>Let us assume we are going to create a Validation pacakge. Probably you love annotations or yml format. It is always a better idea to keep the annotations, yaml etc on a bridge than in the Validation package. Remember you have composer, let the bridge package composer.json helps you to download validation package, annotation library. This also helps you to write your integration tests in bridge package than making a dependency on the Validation package.</p>

<p>And also help people to use different annotations library than a single one or you will end up messing with more annotation classes.</p>

<p>I guess this helps people to</p>

<p>1 ) fork and contribute</p>

<p>2 ) Even if there is no documentation, it helps to look into the source and get the point. Else a lot of classes confuses people.</p>

<p>Nothing is developed to make it bad, everything is made for good. Though at-times it acts badly.</p>

<p>These are some of the principles I learned looking at various projects like Aura, Symfony2, ZF2, Lithium, Fuel2, Illuminate&#8230; you name it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura Framework releases Beta4]]></title>
    <link href="http://harikt.com/blog/2012/12/18/aura-framework-releases-beta4/"/>
    <updated>2012-12-18T23:25:00+05:30</updated>
    <id>http://harikt.com/blog/2012/12/18/aura-framework-releases-beta4</id>
    <content type="html"><![CDATA[<p>Aura.Framework released Beta4. In this release <a href="http://auraphp.github.com/Aura.Framework">Aura.Framework</a> has extracted the Hello Word package and renamed it as <a href="http://auraphp.github.com/Aura.Demo">Aura.Demo</a>.</p>

<p>You can get the system as a whole from <a href="http://auraphp.github.com/system/downloads/">http://auraphp.github.com/system/downloads/</a></p>

<p>Read about the release from <a href="http://auraphp.github.com/2012/12/18/new-system-release/">blog post</a> and join discussion at <a href="https://groups.google.com/d/topic/auraphp/uPsSK7OqOoI/discussion">auraphp group</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The moving from Drupal7 to octopress]]></title>
    <link href="http://harikt.com/blog/2012/12/17/the-moving-from-drupal7-to-octopress/"/>
    <updated>2012-12-17T23:23:00+05:30</updated>
    <id>http://harikt.com/blog/2012/12/17/the-moving-from-drupal7-to-octopress</id>
    <content type="html"><![CDATA[<p>Recently I ported the blog from <a href="http://drupal.org">Drupal7</a> to <a href="http://octopress.org/">octopress</a> for certain reasons. The php script that helped me to do the porting from drupal to octopress is given below. This is a port of the ruby script with some additional fixes on the SQL. This needs <a href="http://johnmacfarlane.net/pandoc/">pandoc</a> to be installed to convert from Html to Markdown. There is also slight isssue with the syntaxhighlighter, which you may want to manually fix.</p>

<figure class='code'><figcaption><span>drupal7 to octopress</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="k">function</span> <span class="nf">drupalProcess</span><span class="p">(</span><span class="nv">$dbname</span><span class="p">,</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$password</span><span class="p">,</span> <span class="nv">$host</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$dsn</span> <span class="o">=</span> <span class="s2">&quot;mysql:host=</span><span class="si">$host</span><span class="s2">;dbname=&quot;</span> <span class="o">.</span> <span class="nv">$dbname</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$pdo</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Pdo</span><span class="p">(</span><span class="nv">$dsn</span><span class="p">,</span> <span class="nv">$username</span><span class="p">,</span> <span class="nv">$password</span><span class="p">,</span> <span class="nv">$options</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>          <span class="nx">PDO</span><span class="o">::</span><span class="na">MYSQL_ATTR_INIT_COMMAND</span> <span class="o">=&gt;</span> <span class="s1">&#39;SET NAMES utf8&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="p">)</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'>    <span class="nv">$sql</span> <span class="o">=</span> <span class="s2">&quot;SELECT n.nid, </span>
</span><span class='line'><span class="s2">            n.title, </span>
</span><span class='line'><span class="s2">            n.created, </span>
</span><span class='line'><span class="s2">            n.changed, </span>
</span><span class='line'><span class="s2">            b.body_value AS &#39;body&#39;, </span>
</span><span class='line'><span class="s2">            b.body_summary, </span>
</span><span class='line'><span class="s2">            b.body_format, </span>
</span><span class='line'><span class="s2">            n.status, </span>
</span><span class='line'><span class="s2">            l.alias AS &#39;slug&#39;, </span>
</span><span class='line'><span class="s2">            GROUP_CONCAT( d.name SEPARATOR &#39;, &#39; ) AS &#39;tags&#39; </span>
</span><span class='line'><span class="s2">        FROM node AS n </span>
</span><span class='line'><span class="s2">        JOIN field_data_body b ON b.entity_id = n.nid </span>
</span><span class='line'><span class="s2">        JOIN taxonomy_index t ON t.nid = n.nid </span>
</span><span class='line'><span class="s2">        JOIN taxonomy_term_data d ON t.tid = d.tid </span>
</span><span class='line'><span class="s2">        LEFT JOIN url_alias AS l ON l.source = CONCAT( &#39;node/&#39;, n.nid ) </span>
</span><span class='line'><span class="s2">        WHERE n.type = &#39;blog&#39; AND b.revision_id = n.vid </span>
</span><span class='line'><span class="s2">        GROUP BY n.nid&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$sth</span> <span class="o">=</span> <span class="nv">$pdo</span><span class="o">-&gt;</span><span class="na">prepare</span><span class="p">(</span><span class="nv">$sql</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$sth</span><span class="o">-&gt;</span><span class="na">execute</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$rows</span> <span class="o">=</span> <span class="nv">$sth</span><span class="o">-&gt;</span><span class="na">fetchAll</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$bool</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="mi">0</span> <span class="o">=&gt;</span> <span class="s1">&#39;false&#39;</span><span class="p">,</span> <span class="mi">1</span> <span class="o">=&gt;</span> <span class="s1">&#39;true&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="k">foreach</span> <span class="p">(</span><span class="nv">$rows</span> <span class="k">as</span> <span class="nv">$row</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$fp</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="s1">&#39;htmlcontents.html&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">fwrite</span><span class="p">(</span><span class="nv">$fp</span><span class="p">,</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;body&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="nb">fclose</span><span class="p">(</span><span class="nv">$fp</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$datetime</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DateTime</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$datetime</span><span class="o">-&gt;</span><span class="na">setTimestamp</span><span class="p">(</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;created&#39;</span><span class="p">]);</span>
</span><span class='line'>        <span class="nv">$date</span> <span class="o">=</span> <span class="nv">$datetime</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">=</span> <span class="s1">&#39;---&#39;</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s1">&#39;layout: post&#39;</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s1">&#39;title: &#39;</span> <span class="o">.</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;title&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s1">&#39;categories: [&#39;</span> <span class="o">.</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;tags&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="s1">&#39;]&#39;</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s1">&#39;published: &#39;</span> <span class="o">.</span> <span class="nv">$bool</span><span class="p">[</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;status&#39;</span><span class="p">]]</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s1">&#39;date: &#39;</span> <span class="o">.</span> <span class="nv">$datetime</span><span class="o">-&gt;</span><span class="na">format</span><span class="p">(</span><span class="s1">&#39;Y-m-d H:i&#39;</span><span class="p">)</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s1">&#39;---&#39;</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="k">empty</span><span class="p">(</span><span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;slug&#39;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$list</span> <span class="o">=</span> <span class="nb">explode</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;slug&#39;</span><span class="p">]);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nb">count</span><span class="p">(</span><span class="nv">$list</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;slug&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nb">end</span><span class="p">(</span><span class="nv">$list</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;slug&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;node-&#39;</span> <span class="o">.</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;nid&#39;</span><span class="p">];</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$pandoc</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">exec</span><span class="p">(</span><span class="s1">&#39;pandoc -t markdown -f html htmlcontents.html&#39;</span><span class="p">,</span> <span class="o">&amp;</span><span class="nv">$pandoc</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="nb">implode</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">,</span> <span class="nv">$pandoc</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$url</span> <span class="o">=</span> <span class="s1">&#39;source/posts/&#39;</span> <span class="o">.</span> <span class="nv">$date</span> <span class="o">.</span> <span class="s1">&#39;-&#39;</span> <span class="o">.</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;slug&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="s1">&#39;.markdown&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$contents</span> <span class="o">.=</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nb">file_exists</span><span class="p">(</span><span class="nv">$url</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>            <span class="nv">$fp</span> <span class="o">=</span> <span class="nb">fopen</span><span class="p">(</span><span class="nv">$url</span><span class="p">,</span> <span class="s2">&quot;w&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="nb">fwrite</span><span class="p">(</span><span class="nv">$fp</span><span class="p">,</span> <span class="nv">$contents</span><span class="p">);</span>
</span><span class='line'>            <span class="nb">fclose</span><span class="p">(</span><span class="nv">$fp</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">echo</span> <span class="s2">&quot;File exists issue : &quot;</span> <span class="o">.</span> <span class="nv">$row</span><span class="p">[</span><span class="s1">&#39;slug&#39;</span><span class="p">]</span> <span class="o">.</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="s2">&quot;</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c1">//optional hostname</span>
</span><span class='line'><span class="nx">drupalProcess</span><span class="p">(</span><span class="s1">&#39;dbname&#39;</span><span class="p">,</span> <span class="s1">&#39;username&#39;</span><span class="p">,</span> <span class="s1">&#39;password&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Happy porting!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resize image keeping aspect ratio in Imagine]]></title>
    <link href="http://harikt.com/blog/2012/12/17/resize-image-keeping-aspect-ratio-in-imagine/"/>
    <updated>2012-12-17T22:24:00+05:30</updated>
    <id>http://harikt.com/blog/2012/12/17/resize-image-keeping-aspect-ratio-in-imagine</id>
    <content type="html"><![CDATA[<p>I was working with Imagine recently. I want to create a standard width and height for the image that is created. Eg: 500 X 300 .</p>

<p>The user will be uploading different size images and I want to resize the image to X width and Y height. I was using imagine and the code helps to make this happen filling the blank space with white color without loosing aspect ratio.</p>

<figure class='code'><figcaption><span>resize image with imagine</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="cp">&lt;?php</span>
</span><span class='line'><span class="nv">$source</span> <span class="o">=</span> <span class="s1">&#39;image.jpeg&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$destination</span> <span class="o">=</span> <span class="s1">&#39;resize.jpg&#39;</span><span class="p">;</span>
</span><span class='line'><span class="nv">$width</span>  <span class="o">=</span> <span class="mi">300</span><span class="p">;</span>
</span><span class='line'><span class="nv">$height</span> <span class="o">=</span> <span class="mi">500</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$imagine</span>   <span class="o">=</span> <span class="k">new</span> <span class="nx">Imagine\Gd\Imagine</span><span class="p">();</span>
</span><span class='line'><span class="nv">$size</span>      <span class="o">=</span> <span class="k">new</span> <span class="nx">Imagine\Image\Box</span><span class="p">(</span><span class="nv">$width</span><span class="p">,</span> <span class="nv">$height</span><span class="p">);</span>
</span><span class='line'><span class="nv">$mode</span>      <span class="o">=</span> <span class="nx">Imagine\Image\ImageInterface</span><span class="o">::</span><span class="na">THUMBNAIL_INSET</span><span class="p">;</span>
</span><span class='line'><span class="nv">$resizeimg</span> <span class="o">=</span> <span class="nv">$imagine</span><span class="o">-&gt;</span><span class="na">open</span><span class="p">(</span><span class="nv">$source</span><span class="p">)</span>
</span><span class='line'>                <span class="o">-&gt;</span><span class="na">thumbnail</span><span class="p">(</span><span class="nv">$size</span><span class="p">,</span> <span class="nv">$mode</span><span class="p">);</span>
</span><span class='line'><span class="nv">$sizeR</span>     <span class="o">=</span> <span class="nv">$resizeimg</span><span class="o">-&gt;</span><span class="na">getSize</span><span class="p">();</span>
</span><span class='line'><span class="nv">$widthR</span>    <span class="o">=</span> <span class="nv">$sizeR</span><span class="o">-&gt;</span><span class="na">getWidth</span><span class="p">();</span>
</span><span class='line'><span class="nv">$heightR</span>   <span class="o">=</span> <span class="nv">$sizeR</span><span class="o">-&gt;</span><span class="na">getHeight</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$preserve</span>  <span class="o">=</span> <span class="nv">$imagine</span><span class="o">-&gt;</span><span class="na">create</span><span class="p">(</span><span class="nv">$size</span><span class="p">);</span>
</span><span class='line'><span class="nv">$startX</span> <span class="o">=</span> <span class="nv">$startY</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span> <span class="nv">$widthR</span> <span class="o">&lt;</span> <span class="nv">$width</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$startX</span> <span class="o">=</span> <span class="p">(</span> <span class="nv">$width</span> <span class="o">-</span> <span class="nv">$widthR</span> <span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span> <span class="nv">$heightR</span> <span class="o">&lt;</span> <span class="nv">$height</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$startY</span> <span class="o">=</span> <span class="p">(</span> <span class="nv">$height</span> <span class="o">-</span> <span class="nv">$heightR</span> <span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nv">$preserve</span><span class="o">-&gt;</span><span class="na">paste</span><span class="p">(</span><span class="nv">$resizeimg</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Imagine\Image\Point</span><span class="p">(</span><span class="nv">$startX</span><span class="p">,</span> <span class="nv">$startY</span><span class="p">))</span>
</span><span class='line'>    <span class="o">-&gt;</span><span class="na">save</span><span class="p">(</span><span class="nv">$destination</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>A normal image of size 500 X 500</p>

<p><img class="center" src="http://harikt.com/assets/images/kitten.jpg" width="500" height="500" title="A cute kitten" alt="a kitten"></p>

<p>when resized to 300 X 200</p>

<p><img class="center" src="http://harikt.com/assets/images/resize-image300x200.jpg" width="300" height="200" title="Image resized to 300X200" alt="resized image"></p>

<p>and 300 X 400</p>

<p><img class="center" src="http://harikt.com/assets/images/resize-image300x400.jpg" width="300" height="400" title="Image resized to 300X400" alt="resized image"></p>

<p>A huge Thanks to the person who helped me on Symfony2 irc to find the different modes. I am not recalling the irc handle currently. I will update once I remember the same.</p>

<p>Image courtsey <a href="http://placekitten.com/">http://placekitten.com/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Status code 304]]></title>
    <link href="http://harikt.com/blog/2012/12/16/status-code-304/"/>
    <updated>2012-12-16T23:03:00+05:30</updated>
    <id>http://harikt.com/blog/2012/12/16/status-code-304</id>
    <content type="html"><![CDATA[<p>Everyone knows Http is the underlying concept of Web. The base concept is a request is initiated by a browser or web-client and you get a response back. Some day&#8217;s back I noticed some interesting slides from Alessandro Nadalin&#8217;s talk <a href="http://odino.org/mixing-the-history-of-http-spdy-and-http-slash-2-dot-0/">Mixing the history of HTTP, SPDY and HTTP/2.0</a></p>

<p>It really inspired me to look more into the Http. I also understood a fact that I was missing many basic stuffs. I thought of playing with it.</p>

<p>Note : This is just experimental stuffs which I tried to learn looking at various sources. Things can be wrong also, feel free to correct if you think so.</p>

<p>Normally you don&#8217;t care about the underlying http headers. There are status codes which are passed before an actual content is send. So the browser knows the state whether the content is available in server, what content-type is coming, for eg like html, json, xml etc. The content-length, accept-language, etc. You can see a list of http request and response headers at http://en.wikipedia.org/wiki/List_of_HTTP_header_fields.</p>

<p>So we are going to create the headers other than the normal apache header. By default the status is 200 OK.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">header(&#39;Content-Type: text/html&#39;);</span>
</span><span class='line'><span class="x">echo &#39;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;&#39;;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you notice the broswer headers you can see something like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">Request URL:http://localhost:8000/</span>
</span><span class='line'><span class="x">Request Method:GET</span>
</span><span class='line'><span class="x">Status Code:200 OK</span>
</span><span class='line'>
</span><span class='line'><span class="x">Request Headers</span>
</span><span class='line'>
</span><span class='line'><span class="x">Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span>
</span><span class='line'><span class="x">Accept-Charset:ISO-8859-1,utf-8;q=0.7,*;q=0.3</span>
</span><span class='line'><span class="x">Accept-Encoding:gzip,deflate,sdch</span>
</span><span class='line'><span class="x">Accept-Language:en-US,en;q=0.8</span>
</span><span class='line'><span class="x">Cache-Control:max-age=0</span>
</span><span class='line'><span class="x">Connection:keep-alive</span>
</span><span class='line'><span class="x">Host:localhost:8000</span>
</span><span class='line'><span class="x">User-Agent:Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.19 (KHTML, like Gecko) Ubuntu/11.10 Chromium/18.0.1025.168 Chrome/18.0.1025.168 Safari/535.19</span>
</span><span class='line'>
</span><span class='line'><span class="x">Response Headers</span>
</span><span class='line'>
</span><span class='line'><span class="x">HTTP/1.1 200 OK</span>
</span><span class='line'><span class="x">Host: localhost:8000</span>
</span><span class='line'><span class="x">Connection: close</span>
</span><span class='line'><span class="x">X-Powered-By: PHP/5.4.4-1~oneiric+1</span>
</span><span class='line'><span class="x">Content-Type: text/html</span>
</span><span class='line'><span class="x">Last-Modified: Tue, 15 Jan 2011 12:00</span>
</span></code></pre></td></tr></table></div></figure>


<p>and the respose source as</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;</span>Hello World<span class="nt">&lt;/body&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Http Caching:</p>

<p>So you may not have seen any benefict in the above for its what you normally get. Now lets enter to the world of http caching.</p>

<p>You may have heard about Expires, Cache-Control, Last-Modified, Etag headers. Yes with the help of these we can make use of http caching. Let&#8217;s see a base example.</p>

<p>What will happen when you request the same url? It reloads the page. So the base concept is same, the client requests to server and server responds. But the scenario changes, if the browser is asking with some additional headers like If-Modified-Since or If-None-Match.</p>

<p>If the response from server has set Last-Modified header value, then the request initiated by broswer will be having If-Modified-Since header.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">header(&#39;Content-Type: text/html&#39;);</span>
</span><span class='line'><span class="x">header(&#39;Last-Modified: Tue, 15 Jan 2011 12:00 GMT&#39;);</span>
</span><span class='line'><span class="x">echo &#39;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;&#39;;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now if you look into the Request Headers, you can notice the If-Modified-Since is send.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
</span><span class='line'>Accept-Charset:ISO-8859-1,utf-8;q=0.7,*;q=0.3
</span><span class='line'>Accept-Encoding:gzip,deflate,sdch
</span><span class='line'>Accept-Language:en-US,en;q=0.8
</span><span class='line'>Cache-Control:max-age=0
</span><span class='line'>Connection:keep-alive
</span><span class='line'>Host:localhost:8000
</span><span class='line'>If-Modified-Since:Tue, 15 Jan 2011 12:00
</span><span class='line'>User-Agent:Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.19 (KHTML, like Gecko) Ubuntu/11.10 Chromium/18.0.1025.168 Chrome/18.0.1025.168 Safari/535.19
</span></code></pre></td></tr></table></div></figure>


<p>But we weren&#8217;t validating the data to make use of caching. What we need to do is check whether the server variable HTTP_IF_MODIFIED_SINCE is set. If its set, we need to validate whether its being modified. If both are same we just need to send a 304 status code which means not modified with out any content. I am hard coding for demonstration purpose.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">if ( isset($_SERVER[&#39;HTTP_IF_MODIFIED_SINCE&#39;]) &amp;&amp; </span>
</span><span class='line'><span class="x">    $_SERVER[&#39;HTTP_IF_MODIFIED_SINCE&#39;] == &#39;Tue, 15 Jan 2011 12:00 GMT&#39; ) {</span>
</span><span class='line'><span class="x">    http_response_code(304);</span>
</span><span class='line'><span class="x">} else {</span>
</span><span class='line'><span class="x">    header(&#39;Content-Type: text/html&#39;);</span>
</span><span class='line'><span class="x">    header(&#39;Last-Modified: Tue, 15 Jan 2011 12:00 GMT&#39;);</span>
</span><span class='line'><span class="x">    echo &#39;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;&#39;;</span>
</span><span class='line'><span class="x">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>So in this case if you reload the page, it will send a 304 not modified header. Getting the 304 header browser knows its not modified. This is too fast and we save a huge band width and server processing. Isn&#8217;t it too good? I recall his slides 21 years of http which still not used very nicely :-/</p>

<p>Let&#8217;s move on to E-tag. As you have noticed the problem with Last-Modified and Expires is it uses GMT time. If the server and the client are not sync, then its hard. Thus the E-tag is introduced. You can create a md5 hash and set the E-tag header.</p>

<p>If you are setting a E-tag, then you can use the server variable HTTP_IF_NONE_MATCH to validate it and send a status of 304.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">if ( isset($_SERVER[&#39;HTTP_IF_MODIFIED_SINCE&#39;]) &amp;&amp; </span>
</span><span class='line'><span class="x">    $_SERVER[&#39;HTTP_IF_MODIFIED_SINCE&#39;] == &#39;Tue, 15 Jan 2011 12:00 GMT&#39; ) {</span>
</span><span class='line'><span class="x">    http_response_code(304);</span>
</span><span class='line'><span class="x">} elseif ( isset($_SERVER[&#39;HTTP_IF_NONE_MATCH&#39;]) &amp;&amp; </span>
</span><span class='line'><span class="x">    $_SERVER[&#39;HTTP_IF_NONE_MATCH&#39;] == md5(&#39;Hello&#39;) ) {</span>
</span><span class='line'><span class="x">    http_response_code(304);</span>
</span><span class='line'><span class="x">} else {</span>
</span><span class='line'><span class="x">    header(&#39;Content-Type: text/html&#39;);</span>
</span><span class='line'><span class="x">    header(&#39;Last-Modified: Tue, 15 Jan 2011 12:00 GMT&#39;);</span>
</span><span class='line'><span class="x">    header(&#39;ETag: &#39; . md5(&#39;Hello&#39;));</span>
</span><span class='line'><span class="x">    echo &#39;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;Hello World&lt;/body&gt;&lt;/html&gt;&#39;;</span>
</span><span class='line'><span class="x">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Note : In the above examples I have hard coded the time and md5 hash. But in the real world you should use file modified time or something like that depending on the use case.</p>

<p>References :</p>

<p>Status Code : <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></p>

<p><a href="http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol">http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol</a></p>

<p>Response : <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec6.html</a></p>

<p>Caching in Http : <a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html">http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html</a></p>

<p><a href="http://en.wikipedia.org/wiki/List_of_HTTP_header_fields">http://en.wikipedia.org/wiki/List_of_HTTP_header_fields</a></p>

<p><a href="http://en.wikipedia.org/wiki/HTTP_ETag">http://en.wikipedia.org/wiki/HTTP_ETag</a></p>

<p><a href="http://stackoverflow.com/questions/691318/what-headers-do-i-want-to-send-together-with-a-304-response">http://stackoverflow.com/questions/691318/what-headers-do-i-want-to-send-together-with-a-304-response</a></p>

<p><a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19</a></p>

<p><a href="http://tomayko.com/writings/things-caches-do">http://tomayko.com/writings/things-caches-do</a></p>

<p><a href="http://www.peej.co.uk/articles/http-caching.html">http://www.peej.co.uk/articles/http-caching.html</a></p>

<p><a href="http://www.mnot.net/cache_docs/">http://www.mnot.net/cache_docs/</a></p>

<p><a href="https://developers.google.com/storage/docs/reference-headers#cachecontrol">https://developers.google.com/storage/docs/reference-headers#cachecontrol</a></p>

<p><a href="https://developers.google.com/speed/docs/best-practices/caching#LeverageBrowserCaching">https://developers.google.com/speed/docs/best-practices/caching#LeverageBrowserCaching</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura.Sql can now make use of existing PDO connection]]></title>
    <link href="http://harikt.com/blog/2012/12/06/node-227/"/>
    <updated>2012-12-06T19:27:00+05:30</updated>
    <id>http://harikt.com/blog/2012/12/06/node-227</id>
    <content type="html"><![CDATA[<p>Aura.Sql can now make use of an existing PDO connection with the recent <a href="https://github.com/auraphp/Aura.Sql/commit/79284382ef6351d81719376063076c7e511c28fd">commit here</a> . This all came after a short discussion with Stan Lemon. A big Thanks to him for making a featured request like this.     > @<a href="https://twitter.com/harikt">harikt</a> can I inject an existing Pdo > object? > > — Stan Lemon (@stanlemon) > <a href="https://twitter.com/stanlemon/status/274708971217100800">December 1, 2012</a>     How to make use of an existing PDO?  You want to get a connection object and set the instance of pdo. Note : In this way you are eager loading the PDO. Else Aura.Sql knows when to do the connection. Example of how to make use of it is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">use Aura\Sql\ConnectionFactory; </span>
</span><span class='line'><span class="x">$connection_factory = new ConnectionFactory; </span>
</span><span class='line'><span class="x">$connection = $connection_factory-&gt;newInstance( </span>
</span><span class='line'><span class="x">    // connection name </span>
</span><span class='line'><span class="x">    &#39;mysql&#39;, </span>
</span><span class='line'><span class="x">    // DSN elements for PDO; this can also be </span>
</span><span class='line'><span class="x">    // an array of key-value pairs </span>
</span><span class='line'><span class="x">    // host=127.0.0.1;dbname=database-name </span>
</span><span class='line'><span class="x">    &#39;&#39;, </span>
</span><span class='line'><span class="x">    // username for the connection </span>
</span><span class='line'><span class="x">    &#39;&#39;, </span>
</span><span class='line'><span class="x">    // password for the connection </span>
</span><span class='line'><span class="x">    &#39;&#39; </span>
</span><span class='line'><span class="x">); </span>
</span><span class='line'><span class="x">$connection-&gt;setPdo($pdo); </span>
</span></code></pre></td></tr></table></div></figure>


<p>Normally you need to pass the dsn as a string or array. But if you are having the PDO object and you don&#8217;t love to do, you can pass it as null. Then to the connection object set the pdo instance. Now you can make use of the Aura.Sql insert ,update , delete queries. For a detailed information of how to do check the docs at <a href="https://github.com/auraphp/Aura.Sql">Aura.Sql</a> .  Assuming you have a PDO object created something like the one below</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$params = array( </span>
</span><span class='line'><span class="x">    &#39;driver&#39; =&gt; &#39;pdo_mysql&#39;, </span>
</span><span class='line'><span class="x">    &#39;user&#39; =&gt; &#39;username&#39;, </span>
</span><span class='line'><span class="x">    &#39;password&#39; =&gt; &#39;password&#39;, </span>
</span><span class='line'><span class="x">    &#39;dbname&#39; =&gt; &#39;database-name&#39; </span>
</span><span class='line'><span class="x">); </span>
</span><span class='line'><span class="x">$dsn = &#39;mysql:host=localhost;dbname=&#39; . $params[&#39;dbname&#39;]; </span>
</span><span class='line'><span class="x">$pdo = new Pdo(</span>
</span><span class='line'><span class="x">    $dsn, </span>
</span><span class='line'><span class="x">    $params[&#39;user&#39;], </span>
</span><span class='line'><span class="x">    $params[&#39;password&#39;], </span>
</span><span class='line'><span class="x">    $options = array( PDO::MYSQL_ATTR_INIT_COMMAND =&gt; &#39;SET NAMES utf8&#39;, ) </span>
</span><span class='line'><span class="x">); </span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Paid to Speak]]></title>
    <link href="http://harikt.com/blog/2012/12/04/node-226/"/>
    <updated>2012-12-04T06:03:00+05:30</updated>
    <id>http://harikt.com/blog/2012/12/04/node-226</id>
    <content type="html"><![CDATA[<p>Before going to speak at osidays, the first thing I did was read the book Paid to Speak. It gave me lots of insights how I can improve. The book was given to me by Jennifer Kumar. I have shared my thoughts on her blog. You can read more from <a href="http://www.authenticjourneys.info/2012/12/9-lessons-on-being-public-speaker.html">9 Lessons on Being a Public Speaker</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First stable release for Aura components]]></title>
    <link href="http://harikt.com/blog/2012/11/29/node-225/"/>
    <updated>2012-11-29T20:46:00+05:30</updated>
    <id>http://harikt.com/blog/2012/11/29/node-225</id>
    <content type="html"><![CDATA[<p>So today @Paul M Jones officially declared the first stable release for Aura PHP components. Yes, I am really excited to see this release for it comes with a ton of great improvements for many components, bug fixes and sadly some BC breaks also. The list of packages which became stable are https://github.com/auraphp/Aura.Autoload https://github.com/auraphp/Aura.Cli https://github.com/auraphp/Aura.Di https://github.com/auraphp/Aura.Http https://github.com/auraphp/Aura.Marshal https://github.com/auraphp/Aura.Router : Yes I want to update the post at phpmaster.com for it has some breaks. I will be doing it in coming days. https://github.com/auraphp/Aura.Signal https://github.com/auraphp/Aura.Sql https://github.com/auraphp/Aura.View https://github.com/auraphp/Aura.Web https://github.com/auraphp/Aura.Uri : uri manipulation and there are some packages that are releasing the first Beta. Though these packages have been there for sometime, this is officially declared now only. Yes a bit delay from our part to declare it. https://github.com/auraphp/Aura.Filter Filter is an awesome component for Sanitizing and Validating. You guys should look into the core to learn how it works really. Its an awesome piece of work! . I will in the coming days write something about it. https://github.com/auraphp/Aura.Intl for Internationalization https://github.com/auraphp/Aura.Session : for session handling Thanks to all to make the release happen. You can read the official declaration at http://paul-m-jones.com/archives/2976 . Join our mailing list https://groups.google.com/forum/#!forum/auraphp or #auraphp at irc.freenode.net .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The making of Hari.Extras]]></title>
    <link href="http://harikt.com/blog/2012/11/24/node-224/"/>
    <updated>2012-11-24T21:22:00+05:30</updated>
    <id>http://harikt.com/blog/2012/11/24/node-224</id>
    <content type="html"><![CDATA[<p>If you have read my earlier posts, you know I started to love templating
library like Twig, Mustache etc. So I was interested to in-corporate Twig
or PhlyMustache or any sort of templating library to auraphp.</p>

<p><a href="https://github.com/auraphp/Aura.Web">Aura.Web</a> makes it easy to do
without much hassle. What you want to do is create the class which
extends the <code>Aura\Web\Renderer\AbstractRenderer</code> and have a exec() method.
For more details checkout <a href="https://github.com/auraphp/Aura.Web/tree/develop#data-and-rendering">Data and Rendering</a></p>

<pre><code>&lt;?php
namespace Vendor\Package\Web\Renderer;

use Aura\Web\Renderer\AbstractRenderer;

class YourRender extends AbstractRenderer
{
    public function exec()
    {
    }
}
</code></pre>

<p>And you should pass an object of Vendor\Package\Web\Renderer\YourRender to your controller.</p>

<p>Currently I have added support for <a href="http://twig.sensiolabs.org">Twig</a> in <a href="http://github.com/harikt/Hari.Extras">Hari.Extras</a> . I will be adding support for
PhlyMustache in the coming days. Hari.Extras comes with unit tests.</p>

<p>Running unit tests :
To run tests you should first install the dependencies. You can run
{syntaxhighlighter class=&#8221;php&#8221;}composer.phar install &#8211;dev{/syntaxhighlighter}
This will install the dependencies like Aura.Web, Aura.Framework, Twig, vfsstream etc in vendor folder.
Now you can run the phpunit from tests folder.</p>

<p>A big Thanks to @Paul M Jones and Chris Hartjes and all who have supported
one way or the other giving me tips and tricks, motivation to make this happen.
The nice thing is with composer for I don&#8217;t need to keep everything in the tests folder.
 Thanks to @Jordi</p>

<p>By the way as <a href="https://github.com/auraphp">auraphp</a> is getting closer and closer for the next release
I am planning to start a series of posts to get started with using the components. Stay tuned :) .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[vfsStream and file system]]></title>
    <link href="http://harikt.com/blog/2012/11/24/node-223/"/>
    <updated>2012-11-24T20:42:00+05:30</updated>
    <id>http://harikt.com/blog/2012/11/24/node-223</id>
    <content type="html"><![CDATA[<p>Paul M Jones wrote earlier <a href="http://paul-m-jones.com/archives/2487">When Possible, Use File *Resources* Instead Of File *Names*</a> and in comments <a href="http://www.littlehart.net/atthekeyboard">Chris Hartjes</a> was mentioning about <a href="http://vfs.bovigo.org/">vfsStream</a>. So for <a href="https://github.com/auraphp">@auraphp</a> we thought of making to support vfsStream. What the hell it is? vfsStream is a PHP stream wrapper for a virtual file system that may be helpful in unit tests to mock the real file system. It can be used with any unit test framework, like PHPUnit or SimpleTest. So without touching the file system and not bothering too much about the operating system, file permissions, disk quota, removing the files created by tests on tear down etc we can make use of vfsstream. Lets start Go and get it via composer.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">{ </span>
</span><span class='line'><span class="x">    &quot;require&quot;: { </span>
</span><span class='line'><span class="x">        &quot;mikey179/vfsStream&quot;: &quot;1.1.0&quot; </span>
</span><span class='line'><span class="x">        } </span>
</span><span class='line'><span class="x">    } </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> Run your composer.phar update.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">require &#39;vendor/autoload.php&#39;; </span>
</span><span class='line'><span class="x">use org\\bovigo\\vfs\\vfsStream; </span>
</span><span class='line'><span class="x">use org\\bovigo\\vfs\\visitor\\vfsStreamStructureVisitor; </span>
</span><span class='line'><span class="x">use org\\bovigo\\vfs\\visitor\\vfsStreamPrintVisitor; </span>
</span><span class='line'><span class="x">$structure = array( &#39;Core&#39; =\&gt; array( &#39;AbstractFactory&#39; =\&gt; array( &#39;test.php&#39; =\&gt; &#39;some text content&#39;, &#39;other.php&#39; =\&gt; &#39;Some more text content&#39;, &#39;Invalid.csv&#39; =\&gt; &#39;Something else&#39;, ), &#39;AnEmptyFolder&#39; =\&gt; array(), &#39;badlocation.php&#39; =\&gt; &#39;some bad content&#39;, ) ); </span>
</span><span class='line'><span class="x">$root = vfsStream::setup(&quot;root&quot;, &#39;&#39;, $structure); </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> So now we have created a complex structured file system. How can we check whether the structure is same?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">vfsStream::inspect(new vfsStreamPrintVisitor()); </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> Now you have the structure how can you get the contents of the file you have created?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">file\_get\_contents(vfsStream::url(&#39;root/Core/badlocation.php&#39;)); </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> Or you can do via</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$root-&gt;getChild(&#39;Core/badlocation.php&#39;)-\&gt;getContent(); </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> The question was raised by myself at https://github.com/mikey179/vfsStream/issues/48 . You can create directory and use vfsStreamPrintVisitor to see how the structure will be</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">mkdir(vfsStream::url(&#39;root/Core/AnEmptyFolder/hello&#39;)); vfsStream::inspect(new vfsStreamPrintVisitor()); </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p> There is more documentation how you can use in phpunit or have a look into the recent commits on <a href="https://github.com/auraphp/Aura.View/commit/f39e3452116072a3fe7f529584acb862a76fe15e">Aura.View</a> For more documentation have a look into https://github.com/mikey179/vfsStream/wiki</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design Principles for a Better CMS]]></title>
    <link href="http://harikt.com/blog/2012/11/06/node-221/"/>
    <updated>2012-11-06T21:32:00+05:30</updated>
    <id>http://harikt.com/blog/2012/11/06/node-221</id>
    <content type="html"><![CDATA[<p>May be the question is so simple for you. But many times I feel it much complicated. Everyone would have started their website with a custom cms and later moved to Wordpress, Drupal, Joomla or something similar. I used to look for a better book in any language which has design decisions made for the cms to make it such a way that it can be extended. Some of the books that seems interesting to me are 1 ) <a href="http://www.apress.com/9781430218791">Pro Zend Framework CMS</a> 2 ) <a href="http://www.packtpub.com/php-5-cms-framework-development-2nd-edition/book">PHP 5 CMS Framework Development</a> It will be great to see if you have came across such books or do you recommend any other books. I am not just looking for PHP, but I am interested to read any sort of books, which will help me to build the next blogger. Waiting to hear you suggestions on the same.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Talking at Barcamp on Composer, Eath and Facebook Search]]></title>
    <link href="http://harikt.com/blog/2012/10/28/node-220/"/>
    <updated>2012-10-28T11:21:00+05:30</updated>
    <id>http://harikt.com/blog/2012/10/28/node-220</id>
    <content type="html"><![CDATA[<p>The 13th edition of Barcamp kerala is on November 4th. This time I am going to talk on Dependency Management with Composer. In the 12th Barcamp I talked about Aura , and it was a bit technical , so Kenny was making sure, not to go for intensive code. So the talk will not be limited to composer. I will be giving you an introduction to Eath , and also a small project which I have done for my personal use fbsearch. The tool is used to search your own status messages you have posted some months back. Its still on alpha for I didn&#8217;t get enough time to move on to make it much more better. It has some issues which I am already aware of. So if you are interested , be there :) . For more information : <a href="http://barcampkerala.org">barcampkerala.org</a> <a href="http://getcomposer.org">composer.org</a> <a href="https://github.com/crodas/Eath">Eath</a> <a href="http://harikt.com/fbsearch">fbsearch</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why apigen matters ?]]></title>
    <link href="http://harikt.com/blog/2012/10/20/node-219/"/>
    <updated>2012-10-20T22:03:00+05:30</updated>
    <id>http://harikt.com/blog/2012/10/20/node-219</id>
    <content type="html"><![CDATA[<p>I have been working with different open-source projects for a while. Most of them utilizes phpdocumentator2 . I liked it for a while. But I have been looking at apigen, swami etc. Recently I started to make use of apigen extensively. What made me comfortable with apigen than phpdocumentator ? Certain times we may want to look into the code also to see the implementation . I am not sure may be there is an option in phpdocumentator that it can show the code when we click on a function / method. The code highlighting and is shown once we click on it. I like this feature the most. If you haven&#8217;t yet checked how the apigen generated api looks have a look into the one for the <a href="https://github.com/auraphp">aura project</a> which is at <a href="http://harikt.github.com/api">http://harikt.github.com/api</a> More information on a href=&#8221;http://apigen.org>apigen.org</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HTML5 and Upcoming Web Technologies]]></title>
    <link href="http://harikt.com/blog/2012/10/17/node-218/"/>
    <updated>2012-10-17T19:41:00+05:30</updated>
    <id>http://harikt.com/blog/2012/10/17/node-218</id>
    <content type="html"><![CDATA[<p>Probably you may have already heard about the full day workshop on HTML5 and Upcoming Web Technologies by <a href="https://twitter.com/shwetank">Shwetank Dixit</a> of Opera at <a href="http://interface-tech.in/">Interface</a> which will be held on 3rd November 2012 . Where ? The Woods Manor, Cochin . Why you should participate? HTML5 is the future of internet. Why not learn from the leader? Who should attend ? Are you a web developer? A person who works on android, iphone or any device ? If you said yes, then its for you. What is the cost? This time we are charging 500 INR. The money is used to give you tea/coffee and snacks plus an awesome lunch during the event and to cover the event expenses. I don&#8217;t think its a huge amount for I have been spending more than 500 INR to travel from Cochin to Bangalore to participate in such awesome workshops. You are only spending a 500 INR in a year which will be a worth in your career. There is also discounts available for group registration for companies, please contact Sofie Holmberg via sofie.holmberg at interface-tech dot in or 0484 4433638 . There is only limited seats available , so be there and don&#8217;t loose the best chance attending the workshop and interacting with <a href="https://twitter.com/shwetank">Shwetank Dixit</a>. Register and get your tickets from : http://interface-tech.in/register</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aura T-Shirts]]></title>
    <link href="http://harikt.com/blog/2012/10/04/node-217/"/>
    <updated>2012-10-04T10:44:00+05:30</updated>
    <id>http://harikt.com/blog/2012/10/04/node-217</id>
    <content type="html"><![CDATA[<p>So today I got the custom designed T-Shirts with Aura Logo. Its time to brand :)  <img src="https://pbs.twimg.com/media/A4V654qCAAEudRT.jpg" title="Aura T-Shirt with github url" alt="Aura T-Shirt with github url" />  T-shirts with logo is here &#8230;.. Yey @<a href="https://twitter.com/auraphp">auraphp</a>:) .  <img src="https://pbs.twimg.com/media/A4V7Dv3CUAAIp8U.jpg" title="Aura T-Shirt with logo" alt="Aura T-Shirt with logo" />  A closer look into the logo, made with embroidery  <img src="https://pbs.twimg.com/media/A4V7SHhCYAAt6x-.jpg" title="Closer look at logo" alt="Closer look at logo" />  I have designed thes from ilogo.in .  Status : https://twitter.com/harikt/status/253744088891916288 , https://twitter.com/harikt/status/253744258329235456, https://twitter.com/harikt/status/253744505197584384</p>
]]></content>
  </entry>
  
</feed>
