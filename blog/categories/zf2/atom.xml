<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: zf2 | Random thoughts | Hari KT]]></title>
  <link href="http://harikt.github.com/blog/categories/zf2/atom.xml" rel="self"/>
  <link href="http://harikt.github.com/"/>
  <updated>2012-12-18T23:44:22+05:30</updated>
  <id>http://harikt.github.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Thoughts on installing Zend Framework via composer]]></title>
    <link href="http://harikt.github.com/blog/2012/09/10/thoughts-on-installing-zend-frameowork-via-composer/"/>
    <updated>2012-09-10T11:04:00+05:30</updated>
    <id>http://harikt.github.com/blog/2012/09/10/thoughts-on-installing-zend-frameowork-via-composer</id>
    <content type="html"><![CDATA[<p>Note : First I thought of creating an issue, and it was not in github. These are not serious issues, but just my thoughts when installing ZF2 via composer. I am not sure whether its composer related or the way the zf2 is packaged to do it via composer. Normally the composer.json will be something like {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ cat composer.json { "require": { "zendframework/zend-form": "2.0" } } hari@local:/var/www/composer/zf2$ php ../composer.phar install Loading composer repositories with package information Installing dependencies - Installing zendframework/zendframework (2.0.0) Downloading: 25%\<sup>C</sup> hari@local:/var/www/composer/zf2$ \<sup>C</sup> {/syntaxhighlighter} But you can see the composer tries to install the whole zend-framework. The problem is you need to add some more lines for its hosted in packages.framework.com and not in packagist.org . So your composer.json will be as below . {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ cat composer.json { "repositories": [ { "type": "composer", "url": "http://packages.zendframework.com/" } ], "require": { "zendframework/zend-form": "2.0" } } hari@local:/var/www/composer/zf2$ php ../composer.phar install Loading composer repositories with package information Installing dependencies - Installing zendframework/zend-form (2.0.0) Downloading: 100% zendframework/zend-form suggests installing zendframework/zendservice-recaptcha (ZendService\ReCaptcha component) Writing lock file Generating autoload files {/syntaxhighlighter} Great you installed the zf2 form component. Now you can see where the form is installed . {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ ls vendor/ autoload.php composer zendframework hari@local:/var/www/composer/zf2$ ls vendor/zendframework/ zend-form hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/ Zend hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/ Form hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/ Annotation FieldsetInterface.php composer.json Fieldset.php Element FieldsetPrepareAwareInterface.php ElementInterface.php FormFactoryAwareInterface.php Element.php FormInterface.php ElementPrepareAwareInterface.php Form.php Exception TODO.md Factory.php View {/syntaxhighlighter} Assume you have more zf2 packages which you have added. At a later point you think of installing the framework as a whole itself than adding more packages in the composer.json . So your composer.json will be some what like {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ cat composer.json { "repositories": [ { "type": "composer", "url": "http://packages.zendframework.com/" } ], "require": { "zendframework/zendframework": "2.0" } } hari@local:/var/www/composer/zf2$ php ../composer.phar update Loading composer repositories with package information Updating dependencies - Removing zendframework/zend-form (2.0.0) - Installing zendframework/zendframework (2.0.0) Downloading: 100% Writing lock file Generating autoload files {/syntaxhighlighter} The form has been removed and framework is installed. Lets have a look where its installed . {syntaxhighlighter class} hari@local:/var/www/composer/zf2$ ls vendor/ autoload.php composer zendframework hari@local:/var/www/composer/zf2$ ls vendor/zendframework/ zend-form hari@local:/var/www/composer/zf2$ cat composer.json { "repositories": [ { "type": "composer", "url": "http://packages.zendframework.com/" } ], "require": { "zendframework/zendframework": "2.0" } } hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/ Zend hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/ Form hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/ bin INSTALL.md README-DEV.md resources composer.json library README-GIT.md tests demos LICENSE.txt README.md vendor hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/library/ Zend hari@local:/var/www/composer/zf2$ ls vendor/zendframework/zend-form/Zend/Form/library/Zend/ Authentication Di InputFilter Mvc Stdlib Barcode Dom Json Navigation Tag Cache Escaper Ldap Paginator Text Captcha EventManager Loader Permissions Uri Code Feed Log ProgressBar Validator Config File Mail Serializer Version Console Filter Math Server View Crypt Form Memory ServiceManager XmlRpc Db Http Mime Session Debug I18n ModuleManager Soap {/syntaxhighlighter} You can notice its going on the wrong place. vendor/zendframework/zend-form . I am not sure whether every one needs to remove all the installed packages to install the framework . It seems possible with naming zendframework/package . Thus it don't remove the installed packages. May be there are some other issues related to it for the naming of zendframework/zend-form like that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is there a design flaw for the Components or Packages made by Symfony2 and Zend Framework 2]]></title>
    <link href="http://harikt.github.com/blog/2012/03/09/any-design-flaw-for-components-packages-for-symfony2-zf2/"/>
    <updated>2012-03-09T04:29:00+05:30</updated>
    <id>http://harikt.github.com/blog/2012/03/09/any-design-flaw-for-components-packages-for-symfony2-zf2</id>
    <content type="html"><![CDATA[<p>UPDATE 30-03-2012: Fabien Potencier made the necessary <a href="http://harikt.com/comment/510#comment-510">changes to move the tests</a> to each components source folder. <a href="https://github.com/symfony/symfony/commit/fea6b79acdf01b79ac3d3206c001a9dec662da93">See commit</a> . That's a great move from Symfony's part . But what will happen to at Zend Framework?  The most awesome discussion that is happening in PHP world is recognizing the importance of <a href="http://philsturgeon.co.uk/blog/2012/03/packages-the-way-forward-for-php">Components or Packages</a>. Bernhard Schussek even wrote a post on <a href="http://webmozarts.com/2012/03/06/symfony2-form-architecture/">Symfony2 Form Architecture</a> and I wrote my thoughts and understanding on <a href="http://harikt.com/standalone-form-component-for-php">Standalone Form component for PHP</a>.  I would like to share the image of the low level architecture of the Symfony2 Form component from his post, uploaded to flickr for his bandwidth will not have any trouble.  <a href="http://www.flickr.com/photos/harikt/6819330426/" title="class-diagram2 by K T Hari, on Flickr"><img src="http://farm8.staticflickr.com/7202/6819330426_359a8e4298.jpg" alt="class-diagram2" /></a>  So to conclude the Symfony Form has a minimal dependencies of Event Dispatcher which even can be replaced by writing a custom one that implements Symfony2 's <a href="https://github.com/symfony/EventDispatcher/blob/master/EventDispatcherInterface.php">EventDispatcherInterface</a> .  > @<a href="https://twitter.com/harikt">harikt</a> ah yeah. Form is one of the 3 > components that have required deps (with HttpKernel and Security) > /cc @<a href="https://twitter.com/lsmith">lsmith</a> > > — Christophe Coevoet (@Stof70) > <a href="https://twitter.com/Stof70/status/177430999397957633">March 7, 2012</a>  So the other frameworks need to make the necessary changes even to the core and for the remaining rendering, either they want to use TwigBridge or FrameworkBundle or make your own.  > @<a href="https://twitter.com/harikt">harikt</a> For the rendering, it is not > a hard dependency to TwigBridge. You can write another one once > Form gives you the FormView tree > > — Christophe Coevoet (@Stof70) > <a href="https://twitter.com/Stof70/status/177384161571639296">March 7, 2012</a>  Recently I saw a tweet  > @<a href="https://twitter.com/mattcockayne">mattcockayne</a> would love to > read a blog post where you elaborate on the advantages of > <a href="https://twitter.com/search/%23ZF2">#ZF2</a> over > <a href="https://twitter.com/search/%23Symfony2">#Symfony2</a> /cc > @<a href="https://twitter.com/randomblast">randomblast</a> > > — Lukas Kahwe Smith (@lsmith) > <a href="https://twitter.com/lsmith/status/177891789770985472">March 8, 2012</a>  So I thought of writing what I feel looking at <a href="https://github.com/symfony">Symfony2</a> , <a href="https://github.com/zendframework/zf2">Zend</a> and <a href="https://github.com/auraphp">Aura</a> . I used to hang on in IRC of every channels, as my level of understanding and there are more awesome people who are better than me, I speak less there :-) , so feel free to correct here if you think at any point I am wrong. Looking from outside both Symfony2 and ZF2 is full of standalone components. But the reality is not the same. Though Symfony2 components are split into each components in github, you cannot give a pull request to that component. The tests for all the components still resides in the <a href="https://github.com/symfony/symfony/tree/master/tests/Symfony/Tests/Component">core</a>. The same will be applying to <a href="https://github.com/zendframework/zf2/tree/master/tests/Zend">Zend Framework 2</a> ( ZF2 ) too. I wrote my concern on the topic in mailing list of Symony2, if you are interested you can read on it <a href="https://groups.google.com/d/topic/symfony-devs/CuwDO8LhReQ/discussion">here</a>.  Let's leave the contributions or pull requests, if I / you are trying to integrate Symfony form component to your project or library, we want to bring the tests some how make the necessary changes to the core if I want to make use of Event Dispatcher / Signal or another like Aura or Zend. Try to make how you can render in your view if I am using <a href="https://github.com/auraphp/Aura.View">Aura View</a> or Zend or even in <a href="https://github.com/weierophinney/phly_mustache">phly_mustache</a>.  So let me tell you the design principle to make them as standalone have some failure. Coming back to Aura, as a small contributor I can see Paul M Jones right decision to make the component library has more to speak. The good thing is Aura has all the tests in one place for the component. For eg: consider <a href="https://github.com/auraphp/Aura.Router">Aura Router the routing component</a>. The source lies in src folder , the tests in tests folder.  The design principles of <a href="http://phix-project.org">phix-project.org</a> by Stuart Herbert is also a good when looking into it. So if you mentions its standalone, it should be easy to setup, easy to contribute etc. The Aura components have no depedencies on any of the components, and I feel the same will happen for the remaining Form, Filtering components which are still to be born. I wonder how Zend can make use of Symfony2, or do you mean a copy and paste of the components and changing namespace giving credits to it and making the necessary changes ? I don't know more on the MIT licence and is that what they want.  Please don't think I am disrespect to any of you, for I love the PHP community. <a href="http://blog.phpdeveloper.org">Chris Cornutt (@enygma) on Twitter</a> voiced his opinion on the decisions made by both Zend and Symfony community of using Zend_Log ( If you don't <a href="http://webmozarts.com/2012/03/06/symfony2-form-architecture/#comment-17698">please have a look</a> ).  Update : I am not telling about installing dependencies for a project . Aura itself is using composer.json , so people can download it via composer and you can browse it from  packagist.org . My point was making use of different compoents from different Vendors with out dependencies on the other . For eg using Aura View, Symfony Form and Zend Validator , and if there is less dependencies and as I told if all tests reside at the same components github repo it makes life easier for developers to push and pull stuffs. Consider the movement of Drupal using Symfony components . Does Drupal 8 uses Symfony as a whole ? No its using some of the core components . So if they want to push something they can do easily. I want to dig more on composer to learn whether there is anything other than installation composer can do .  Updating with @fabpot 's own tweet :)  > @<a href="https://twitter.com/rdohms">rdohms</a> If someone told you that > <a href="https://twitter.com/search/%23Symfony">#Symfony</a> is perfect, he's > a complete idiot. > > — Fabien Potencier (@fabpot) > <a href="https://twitter.com/fabpot/status/161408956521119744">January 23, 2012</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Standalone Form component for PHP]]></title>
    <link href="http://harikt.github.com/blog/2012/03/06/standalone-form-component-for-php/"/>
    <updated>2012-03-06T22:18:00+05:30</updated>
    <id>http://harikt.github.com/blog/2012/03/06/standalone-form-component-for-php</id>
    <content type="html"><![CDATA[<p>Recently I was reading the post <a href="http://webmozarts.com/2012/03/06/symfony2-form-architecture/">Symfony2 Form Architecture</a> by <a href="https://twitter.com/#!/webmozart">Bernhard Schussek</a> . The main aim of his post was to make use of Symfony2 form component in Zend Framework 2 as the form architecture which was written in <a href="http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Forms">RFC</a> seems almost the same. This is a small feedback I would love to give as I am interested to make the Form as a standalone component, what ever framework we are using.  These all started with probably @fabpot tweets about it .     > Is it just me or is the <a href="https://twitter.com/search/%23ZF2">#ZF2</a> > form RFC heavily inspired by > <a href="https://twitter.com/search/%23Symfony2">#Symfony2</a>? /cc > @<a href="https://twitter.com/webmozart">webmozart</a> > <a href="http://t.co/cRf01a3X" title="http://framework.zend.com/wiki/display/ZFDEV2/RFC+-+Forms">framework.zend.com/wiki/display/Z…</a> > > — Fabien Potencier (@fabpot) > <a href="https://twitter.com/fabpot/status/174153351372611584">February 27, 2012</a>     Some months back as of Symfony2 stable was released I tried to incorporate the Form component to <a href="https://github.com/auraphp">Aura Project for PHP</a> which was aiming for 5.3 at that time. But now looking forward to 5.4 + only  Let have a look into the Symfony2 dependencies for Form component which is described in pear.symfony.com   EventDispatcher, Validator, Locale .  AuraPHP already have a Signal / Slot / Event Handler , so it doesn't need the EventDispatcher, like the same ZF2 already have one, so I feel EventDispatcher is not needed for both the frameworks. Lets don't think what we have, lets see whether adding these components really solve in creating to make it as a standalone component ?  <a href="http://www.flickr.com/photos/harikt/6813319456/" title="Sf2Form by K T Hari, on Flickr"><img src="http://farm8.staticflickr.com/7055/6813319456_3441d6be49.jpg" alt="Sf2Form" /></a>  I have taken a screenshot of the tweets I got in reply. Thanks to all who tried to help me .Below is the link to the details, and I hope you can go more detailed on the tweets if needed.  > @<a href="https://twitter.com/harikt">harikt</a> You don't need Twig. Simply > the Twig form rendering is easier to get standalone. the PHP one is > in the bundle @<a href="https://twitter.com/weaverryan">weaverryan</a> > @<a href="https://twitter.com/fabpot">fabpot</a> > > — Christophe Coevoet (@Stof70) > <a href="https://twitter.com/Stof70/status/142643884047089664">December 2, 2011</a>     So what is missing for Symfony2 form component ? It needs more components as shown in the gist  below     So to conclude though the Symfony2 Form mentions as a standalone, its not a standalone component at-least looking from a user point of view like me. You can see various people asking about how to use Symfony2 Form component as a standalone in <a href="https://groups.google.com/forum/?fromgroups#!topic/symfony-users/aAqDJjkl2gQ">google groups</a>. But what people points is to Silex again build on the shoulder of Symfony2 component . I am not against Symfony2 , please don't feel so. But I just want to bring the fact that, than writing a big architecture, people would be looking how we can integrate it as standalone .  So in my view I am looking forward to see how ZF2 will make a change from Symfony2 or will it be the same like binding everything . I am also looking forward to see how <a href="http://auraphp.github.com">Aura project for PHP 5.4</a> can bring Form . I have limited knowledge, so I may be wrong on the above things too. Feel free to correct me  I am looking for something like the one below, yes of-course we need validation and stuffs , but it will be standalone , no matter :-) .      &lt;?php     //PFBC 2.x PHP 5 >= 5.3     session_start();     include($<em>SERVER["DOCUMENT_ROOT"] . "/PFBC/Form.php");     $form = new PFBC\Form("GettingStarted", 300);     $form->addElement(new PFBC\Element\Textbox("My Textbox:", "MyTextbox"));     $form->addElement(new PFBC\Element\Select("My Select:", "MySelect", array(        "Option #1",        "Option #2",        "Option #3"     )));     $form->addElement(new PFBC\Element\Button);     $form->render();      //PFBC 2.x PHP 5     session_start();     include($</em>SERVER["DOCUMENT_ROOT"] . "/PFBC/Form.php");     $form = new Form("GettingStarted", 300);     $form->addElement(new Element_Textbox("My Textbox:", "MyTextbox"));     $form->addElement(new Element_Select("My Select:", "MySelect", array(        "Option #1",        "Option #2",        "Option #3"     )));     $form->addElement(new Element_Button);     $form->render();     ?>  An example where I can show such a standalone one is http://code.google.com/p/php-form-builder-class/ . Currently to render the form either you need <a href="https://github.com/symfony/TwigBridge">TwigBridge</a> or <a href="https://github.com/symfony/FrameworkBundle">FrameworkBundle</a> .  > @<a href="https://twitter.com/harikt">harikt</a> There is 2 implementations: > TwigBridge and in FrameworkBundle but you could write one for > Aura.View /cc @<a href="https://twitter.com/webmozart">webmozart</a> > > — Christophe Coevoet (@Stof70) > <a href="https://twitter.com/Stof70/status/177148060881788929">March 6, 2012</a>  If you are using Framework bundle you need <a href="https://github.com/symfony/FrameworkBundle/blob/master/Templating/Helper/FormHelper.php">Templating component</a> and to my understanding if you are using TwigBundle you need Twig itself . So is this a standalone ? Also if its really a standalone why it didn't find a documentation as in http://symfony.com/doc/current/components/index.html . The Symfony2 has released months back, so I don't feel Symfony2 form is a standalone in the sense as I shown in the example .</p>
]]></content>
  </entry>
  
</feed>
