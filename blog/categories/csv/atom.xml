<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: csv | Random thoughts | Hari KT]]></title>
  <link href="http://harikt.com/blog/categories/csv/atom.xml" rel="self"/>
  <link href="http://harikt.com/"/>
  <updated>2013-05-25T12:40:42+05:30</updated>
  <id>http://harikt.com/</id>
  <author>
    <name><![CDATA[Hari K T]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reading and Writing CSV files in PHP]]></title>
    <link href="http://harikt.com/blog/2011/09/03/reading-and-writing-csv-files-php/"/>
    <updated>2011-09-03T14:07:00+05:30</updated>
    <id>http://harikt.com/blog/2011/09/03/reading-and-writing-csv-files-php</id>
    <content type="html"><![CDATA[<p>PHP provides <a href="http://php.net/manual/en/function.fgetcsv.php">fgetcsv</a> and <a href="http://www.php.net/manual/en/function.fputcsv.php">fputcsv</a>. But I was interested to use a PHP 5.3 library <a href="https://github.com/jwage/EasyCSV">Easy CSV</a> by <a href="http://www.twitter.com/jwage">Jonathan H. Wage</a>, one of the core contributor of Doctrine Project , for the easiness to use .  I just copied some of the examples from the library for you. You can always look over https://github.com/jwage/EasyCSV and use it :) .  Reader :      $reader = new \EasyCSV\Reader('read.csv');     while ($row = $reader->getRow()) {         print_r($row);     }  Writer      $writer = new \EasyCSV\Writer('write.csv');     $writer->writeFromArray(array(             'value1, value2, value3',             array('value1', 'value2', 'value3')     ));</p>
]]></content>
  </entry>
  
</feed>
